post_install() {
    username="akkoma"
    home_dir="/opt/${username}"
    uploads_dir="/var/lib/${username}/uploads"
    static_dir="/var/lib/${username}/static"
    config_dir="/etc/${username}"
    tmp_psql="config/setup_db.psql"

    chown -R akkoma "$home_dir"
    chown -R akkoma "$config_dir"

    instance_gen_params="instance gen\
 --output \"${config_dir}/generated_config.exs\"\
 --output-psql \"$tmp_psql\"\
 --uploads-dir \"$uploads_dir\"\
 --static-dir \"$static_dir\"\
 --dbname \"$username\"\
 --dbuser \"$username\"\
"

    printf "\n"
    printf "A local installation of postgresql is strongly recommended unless you know what you are doing. Use:\n    $ sudo pacman -S postgresql\nto install postgresql locally.\n\n"
	printf "If postgresql is installed locally, the user should run the following commands to initialize akkoma:\n"

	printf ">>> sudo -Hu $username MIX_ENV=prod mix pleroma.instance gen ${instance_gen_params}\n"
	printf ">>> sudo -Hu postgres psql -f \"${tmp_psql}\"\n"
	printf ">>> sudo -Hu $username MIX_ENV=prod mix ecto.migrate\n\n"
	printf ">>> sudo -Hu $username  mv config/{generated_config.exs,prod.secret.exs}"


    printf "After initializing akkoma, you may start it with:\n"
    printf ">>> sudo systemctl start akkoma\n\n"

	printf "Check https://docs.akkoma.dev/stable/installation/arch_linux_en/ for post-installation steps.\n"
}

pre_upgrade() {
    systemctl stop akkoma.service
}

post_upgrade() {
    printf "\nYou will need to migrate your database as the above upgrade notes state.\n"
    printf "Ensure your postgresql database, whether local or remote, is up,  and run the following command:\n"
    printf ">>> cd /opt/akkoma\n"
    printf ">>> sudo -Hu akkoma /opt/akkoma/bin/akkoma_ctl migrate\n"

    printf "\nAfter all these, you may start akkoma with:\n"
    printf ">>> sudo systemctl start akkoma\n"
}
