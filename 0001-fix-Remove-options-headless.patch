From efd500df60e5ba1609a5852fee4cba853792ae0e Mon Sep 17 00:00:00 2001
From: txtsd <code@ihavea.quest>
Date: Tue, 14 Nov 2023 10:38:29 +0530
Subject: [PATCH] fix: Remove options.headless which was deprecated in Selenium
 4.13.0

Ref: https://github.com/SeleniumHQ/selenium/commit/b5cfcc4f9c51dd9df9106b62971c417a0fc9a5e4
Co-authored-by: GaspardRuan <1039553124@qq.com>
Signed-off-by: txtsd <code@ihavea.quest>
---
 requirements.txt                        | 2 +-
 src/undetected_chromedriver/__init__.py | 6 +++---
 src/utils.py                            | 4 +++-
 3 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/requirements.txt b/requirements.txt
index af8845a..212df01 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,6 +1,6 @@
 bottle==0.12.25
 waitress==2.1.2
-selenium==4.11.2
+selenium==4.15.2
 func-timeout==4.3.5
 prometheus-client==0.17.1
 # required by undetected_chromedriver
diff --git a/src/undetected_chromedriver/__init__.py b/src/undetected_chromedriver/__init__.py
index af92b73..b21ae7f 100644
--- a/src/undetected_chromedriver/__init__.py
+++ b/src/undetected_chromedriver/__init__.py
@@ -303,7 +303,7 @@ class Chrome(selenium.webdriver.chrome.webdriver.WebDriver):
 
             if any([_ in arg for _ in ("--headless", "headless")]):
                 options.arguments.remove(arg)
-                options.headless = True
+                headless = True
 
             if "lang" in arg:
                 m = re.search("(?:--)?lang(?:[ =])?(.*)", arg)
@@ -396,7 +396,7 @@ class Chrome(selenium.webdriver.chrome.webdriver.WebDriver):
         if no_sandbox:
             options.arguments.extend(["--no-sandbox", "--test-type"])
 
-        if headless or options.headless:
+        if headless:
             #workaround until a better checking is found
             try:
                 v_main = int(self.patcher.version_main) if self.patcher.version_main else 108
@@ -491,7 +491,7 @@ class Chrome(selenium.webdriver.chrome.webdriver.WebDriver):
         else:
             self._web_element_cls = WebElement
 
-        if options.headless:
+        if headless:
             self._configure_headless()
 
     def _configure_headless(self):
diff --git a/src/utils.py b/src/utils.py
index dc71e3b..3672511 100644
--- a/src/utils.py
+++ b/src/utils.py
@@ -153,7 +153,7 @@ def get_webdriver(proxy: dict = None) -> WebDriver:
         logging.debug("Using webdriver proxy: %s", proxy_url)
         options.add_argument('--proxy-server=%s' % proxy_url)
 
-    # note: headless mode is detected (options.headless = True)
+    # note: headless mode is detected (headless = True)
     # we launch the browser in head-full mode with the window hidden
     windows_headless = False
     if get_config_headless():
@@ -161,6 +161,8 @@ def get_webdriver(proxy: dict = None) -> WebDriver:
             windows_headless = True
         else:
             start_xvfb_display()
+    # For normal headless mode:
+    # options.add_argument('--headless')
 
     # if we are inside the Docker container, we avoid downloading the driver
     driver_exe_path = None
-- 
2.42.1

