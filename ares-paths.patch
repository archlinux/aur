diff --git a/ares-PLACEHOLDER/desktop-ui/desktop-ui.cpp b/ares-PLACEHOLDER/desktop-ui/desktop-ui.cpp
@@ -26,10 +26,20 @@
   location = {Path::userData(), "ares/", name};
   if(inode::exists(location)) return location;
 
-  // On non-windows platforms, after exhausting other options,
-  // default to userData, on Windows, default to program dir
+  // On non-windows platforms, this time check the shared
+  // data directory, on Windows, default to program dir,
   // this ensures Portable mode is the default on Windows platforms.
   #if !defined(PLATFORM_WINDOWS)
+    string shared_location = {Path::sharedData(), "ares/", name};
+    if(inode::exists(shared_location)) return shared_location;
+
+    // XXX: Change settings.bml location to match Ares' default behavior.
+    if(directory::exists({Path::userSettings(), "ares/"})) {
+      file::copy({Path::userSettings(), "ares/settings.bml"}, {Path::userData(), "ares/settings.bml"});
+    }
+
+    // On non-windows platforms, after exhausting other options,
+    // default to userData.
     directory::create({Path::userData(), "ares/"});
     return {Path::userData(), "ares/", name};
   #else 

diff --git a/ares-PLACEHOLDER/mia/mia.cpp b/ares-PLACEHOLDER/mia/mia.cpp
@@ -28,10 +28,15 @@
   location = {Path::userData(), "ares/", name};
   if(inode::exists(location)) return location;
 
-  // On non-windows platforms, after exhausting other options,
-  // default to userData, on Windows, default to program dir
+  // On non-windows platforms, this time check the shared
+  // data directory, on Windows, default to program dir
   // this ensures Portable mode is the default on Windows platforms.
 #if !defined(PLATFORM_WINDOWS)
+  string shared_location = {Path::sharedData(), "ares/", name};
+  if(inode::exists(shared_location)) return shared_location;
+
+  // On non-windows platforms, after exhausting other options,
+  // default to userData
   directory::create({Path::userData(), "ares/"});
   return {Path::userData(), "ares/", name};
 #else
