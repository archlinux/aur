### arg 1: the new package version
#pre_install() {
#  echo pre_install $1
#}

### arg 1: the new package version
post_install() {
  echo "create symlinks to subcommands:"
  for SUBCMD in amd-pstate cpu cpufreq drm drm-i915 intel-pstate intel-uncore intel-rapl ryzen; do
    if [ -e /usr/bin/$SUBCMD ]; then
      echo "- /usr/bin/$SUBCMD: skip"
    else
      echo "- /usr/bin/$SUBCMD: create"
      ln -s /usr/bin/knobs /usr/bin/$SUBCMD
    fi
  done
  systemctl daemon-reload
}

### arg 1: the new package version
### arg 2: the old package version
#pre_upgrade() {
#  echo pre_upgrade $1 $2
#}

### arg 1: the new package version
### arg 2: the old package version
post_upgrade() {
  echo "update symlinks to subcommands:"
  for SUBCMD in amd-pstate cpu cpufreq drm drm-i915 intel-pstate intel-uncore intel-rapl ryzen; do
    if [ -e /usr/bin/$SUBCMD ]; then
      echo "- /usr/bin/$SUBCMD: skip"
    else
      echo "- /usr/bin/$SUBCMD: create"
      ln -s /usr/bin/knobs /usr/bin/$SUBCMD
    fi
  done
  systemctl daemon-reload
}

### arg 1: the old package version
#pre_remove() {
#  echo pre_remove $1
#}

### arg 1: the old package version
post_remove() {
  echo "remove symlinks to knobs subcommands:"
  for SUBCMD in amd-pstate cpu cpufreq drm drm-i915 intel-pstate intel-uncore intel-rapl ryzen; do
    if [ -L /usr/bin/$SUBCMD ]; then
      TARGET=$(basename $(readlink /usr/bin/$SUBCMD))
      if [ "$TARGET" = "knobs" ]; then
        echo "- /usr/bin/$SUBCMD: delete"
        rm -f /usr/bin/$SUBCMD
      else
        echo "- /usr/bin/$SUBCMD: skip (does not link to knobs binary)"
      fi
    else
      echo "- /usr/bin/$SUBCMD: not found"
    fi
  done
  systemctl daemon-reload
}
