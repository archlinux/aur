From 99611370656da6f2a124a3f55db579ee2ab5f7b2 Mon Sep 17 00:00:00 2001
From: kenshen112 <finalfantasytimothy@gmail.com>
Date: Sat, 24 Dec 2022 10:00:03 -0700
Subject: [PATCH] Fix resources, Fix CMake

---
 cmake/BuildParameters.cmake   | 9 +++++++++
 pcsx2-qt/CMakeLists.txt       | 7 ++++---
 pcsx2/Frontend/CommonHost.cpp | 8 +++++---
 3 files changed, 18 insertions(+), 6 deletions(-)

diff --git a/cmake/BuildParameters.cmake b/cmake/BuildParameters.cmake
index f38e0bea8..2e11ee7f7 100644
--- a/cmake/BuildParameters.cmake
+++ b/cmake/BuildParameters.cmake
@@ -54,6 +54,15 @@ if(UNIX AND NOT APPLE)
 	option(WAYLAND_API "Enable Wayland support" OFF)
 endif()
 
+if(PACKAGE_MODE)
+	file(RELATIVE_PATH relative_datadir ${CMAKE_INSTALL_FULL_BINDIR} ${CMAKE_INSTALL_FULL_DATADIR}/PCSX2)
+	file(RELATIVE_PATH relative_docdir ${CMAKE_INSTALL_FULL_BINDIR} ${CMAKE_INSTALL_FULL_DOCDIR})
+	# Compile all source codes with those defines
+	list(APPEND PCSX2_DEFS
+		PCSX2_APP_DATADIR="${relative_datadir}"
+		PCSX2_APP_DOCDIR="${relative_docdir}")
+endif()
+
 if(APPLE)
 	option(OSX_USE_DEFAULT_SEARCH_PATH "Don't prioritize system library paths" OFF)
 	option(SKIP_POSTPROCESS_BUNDLE "Skip postprocessing bundle for redistributability" OFF)
diff --git a/pcsx2-qt/CMakeLists.txt b/pcsx2-qt/CMakeLists.txt
index 7e822cb2a..319d442d5 100644
--- a/pcsx2-qt/CMakeLists.txt
+++ b/pcsx2-qt/CMakeLists.txt
@@ -4,9 +4,10 @@ set(CMAKE_AUTOUIC ON)
 
 add_executable(pcsx2-qt)
 
-if (PACKAGE_MODE)
-	message(FATAL_ERROR "Package mode is not supported for Qt builds.")
-else()
+if(PACKAGE_MODE)
+	install(TARGETS pcsx2-qt DESTINATION ${CMAKE_INSTALL_BINDIR})
+	install(DIRECTORY resources DESTINATION ${CMAKE_INSTALL_DATADIR}/PCSX2)
+ else()
 	install(TARGETS pcsx2-qt DESTINATION ${CMAKE_SOURCE_DIR}/bin)
 endif()
 
diff --git a/pcsx2/Frontend/CommonHost.cpp b/pcsx2/Frontend/CommonHost.cpp
index ab992e483..6269b9748 100644
--- a/pcsx2/Frontend/CommonHost.cpp
+++ b/pcsx2/Frontend/CommonHost.cpp
@@ -128,12 +128,14 @@ void CommonHost::SetAppRoot()
 
 void CommonHost::SetResourcesDirectory()
 {
-#ifndef __APPLE__
+#ifdef __APPLE__
+	// On macOS, this is in the bundle resources directory.
+	EmuFolders::Resources = Path::Canonicalize(Path::Combine(EmuFolders::AppRoot, "../Resources"));
+#elif !defined(PCSX2_APP_DATADIR)
 	// On Windows/Linux, these are in the binary directory.
 	EmuFolders::Resources = Path::Combine(EmuFolders::AppRoot, "resources");
 #else
-	// On macOS, this is in the bundle resources directory.
-	EmuFolders::Resources = Path::Canonicalize(Path::Combine(EmuFolders::AppRoot, "../Resources"));
+	EmuFolders::Resources = Path::Canonicalize(Path::Combine(EmuFolders::AppRoot, PCSX2_APP_DATADIR "/resources"));
 #endif
 }
 
-- 
2.38.1

