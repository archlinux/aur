From c055bf348d52a8437ce431af7f7193fa1f10bd98 Mon Sep 17 00:00:00 2001
From: DublikuntMux <dublikunt@gmail.com>
Date: Thu, 8 Jun 2023 20:16:49 +0300
Subject: [PATCH] fix compile error

---
 src/base/convert_to.cpp   | 1 +
 src/base/convert_to.h     | 1 +
 src/base/sha1.h           | 1 +
 src/base/sha1_rfc3174.h   | 3 +++
 src/doc/file/pal_file.cpp | 1 +
 src/gfx/region.h          | 5 ++++-
 6 files changed, 11 insertions(+), 1 deletion(-)

diff --git a/src/base/convert_to.cpp b/src/base/convert_to.cpp
index cb1bf8dd8..47b8c65af 100644
--- a/src/base/convert_to.cpp
+++ b/src/base/convert_to.cpp
@@ -11,6 +11,7 @@
 #include "base/convert_to.h"
 #include "base/sha1.h"
 #include <cstdio>
+#include <cstdint>
 #include <cstdlib>
 
 namespace base {
diff --git a/src/base/convert_to.h b/src/base/convert_to.h
index ecd2fe88c..7485958d7 100644
--- a/src/base/convert_to.h
+++ b/src/base/convert_to.h
@@ -8,6 +8,7 @@
 
 #include "base/base.h"
 #include <string>
+#include <cstdint>
 
 namespace base {
 
diff --git a/src/base/sha1.h b/src/base/sha1.h
index 435faae24..e79fdcb83 100644
--- a/src/base/sha1.h
+++ b/src/base/sha1.h
@@ -6,6 +6,7 @@
 
 #pragma once
 
+#include <cstdint>
 #include <vector>
 #include <string>
 
diff --git a/src/base/sha1_rfc3174.h b/src/base/sha1_rfc3174.h
index 8325b13b7..c53226fdf 100644
--- a/src/base/sha1_rfc3174.h
+++ b/src/base/sha1_rfc3174.h
@@ -20,6 +20,8 @@
 extern "C" {
 #endif
 
+#include "base/ints.h"
+
 /*
  * If you do not have the ISO standard stdint.h header file, then you
  * must typdef the following:
@@ -61,6 +63,7 @@ typedef struct SHA1Context
     int Corrupted;             /* Is the message digest corrupted? */
 } SHA1Context;
 
+
 /*
  *  Function Prototypes
  */
diff --git a/src/doc/file/pal_file.cpp b/src/doc/file/pal_file.cpp
index 3b45fdc0b..727041ae1 100644
--- a/src/doc/file/pal_file.cpp
+++ b/src/doc/file/pal_file.cpp
@@ -14,6 +14,7 @@
 #include "doc/image.h"
 #include "doc/palette.h"
 
+#include <memory>
 #include <cctype>
 #include <fstream>
 #include <iomanip>
diff --git a/src/gfx/region.h b/src/gfx/region.h
index a59fb0011..ca9c34c2b 100644
--- a/src/gfx/region.h
+++ b/src/gfx/region.h
@@ -49,7 +49,10 @@ namespace gfx {
       RegionIterator operator++(int) { RegionIterator o(*this); ++m_ptr; return o; }
       bool operator==(const RegionIterator& o) const { return m_ptr == o.m_ptr; }
       bool operator!=(const RegionIterator& o) const { return m_ptr != o.m_ptr; }
-      reference operator*() { m_rect = *m_ptr; return m_rect; }
+      reference operator*() {
+         m_rect = *new Rect(m_ptr->x1, m_ptr->y1, m_ptr->x2, m_ptr->y2);
+         return m_rect; 
+         }
     private:
       Box* m_ptr;
       mutable Rect m_rect;
