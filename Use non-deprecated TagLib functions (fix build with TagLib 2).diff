diff --git a/CMakeLists.txt b/CMakeLists.txt
index 13fea989d2ce22c11185560348d4bdcf627eb0d5..07b8b944af00efcbc3fb4fe8d07e27149a3548ac 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -79,7 +79,7 @@ option(WITH_IPOD "Enable iPod support in Amarok" ON)
 option(WITH_PLAYGROUND "Enable building of playground scripts and applets (WARNING: some of them might have legal issues!)" OFF)
 
 ############### Taglib
-set(TAGLIB_MIN_VERSION "1.7")
+set(TAGLIB_MIN_VERSION "2.0")
 find_package(Taglib REQUIRED)
 set_package_properties( Taglib PROPERTIES DESCRIPTION "Support for Audio metadata." URL "http://developer.kde.org/~wheeler/taglib.html" TYPE REQUIRED PURPOSE "Required for tag reading" )
 
diff --git a/README b/README
index d9a2481656394c1e065808f2bc6ed3fc7b29fee8..c33a3920e5dbc7ac01516a296d85b4983835f9b0 100644
--- a/README
+++ b/README
@@ -49,18 +49,13 @@ Required
     * Qt 5.10 (or newer)
       https://qt.io/
 
-    * TagLib 1.7 (or newer)
+    * TagLib 2.0 (or newer)
       (Metadata tagging library)
 
     * MySQL 5.0 (or newer) / MariaDB (external database support) or MariaDB
       Embedded (In-process database support)
 
 Optional
-    * Taglib 1.8 for support of MOD, IT, S3M and XM files
-    * Taglib 1.9 for support of Opus files
-      http://taglib.org/
-      https://github.com/taglib/taglib
-
     * TagLib Extras 1.0.1 (or newer)
       (Support for metadata reading of additional file types)
       svn://anonsvn.kde.org/home/kde/trunk/kdesupport/taglib-extras
diff --git a/shared/tag_helpers/MP4TagHelper.cpp b/shared/tag_helpers/MP4TagHelper.cpp
index 7a28b4473cf830ead8b751769d578d342ab2f232..21f586146e98374472f8c5d383b084235cc019c5 100644
--- a/shared/tag_helpers/MP4TagHelper.cpp
+++ b/shared/tag_helpers/MP4TagHelper.cpp
@@ -53,8 +53,8 @@ MP4TagHelper::tags() const
 {
     Meta::FieldHash data = TagHelper::tags();
 
-    TagLib::MP4::ItemListMap map = m_tag->itemListMap();
-    for( TagLib::MP4::ItemListMap::ConstIterator it = map.begin(); it != map.end(); ++it )
+    TagLib::MP4::ItemMap map = m_tag->itemMap();
+    for( TagLib::MP4::ItemMap::ConstIterator it = map.begin(); it != map.end(); ++it )
     {
         qint64 field;
         QString value = TStringToQString( it->second.toStringList().toString( '\n' ) );
@@ -112,15 +112,15 @@ MP4TagHelper::setTags( const Meta::FieldHash &changes )
             if( key == Meta::valHasCover )
                 continue;
             else if( key == Meta::valRating )
-                m_tag->itemListMap()[field] = TagLib::StringList( Qt4QStringToTString( QString::number( value.toFloat() / 10.0 ) ) );
+                m_tag->setItem(field, TagLib::StringList( Qt4QStringToTString( QString::number( value.toFloat() / 10.0 ) ) ));
             else if( key == Meta::valScore )
-                m_tag->itemListMap()[field] = TagLib::StringList( Qt4QStringToTString( QString::number( value.toFloat() / 100.0 ) ) );
+                m_tag->setItem(field, TagLib::StringList( Qt4QStringToTString( QString::number( value.toFloat() / 100.0 ) ) ));
             else if( key == Meta::valBpm || key == Meta::valDiscNr )
-                m_tag->itemListMap()[field] = TagLib::MP4::Item( value.toInt(), 0 );
+                m_tag->setItem(field, TagLib::MP4::Item( value.toInt(), 0 ));
             else if( key == Meta::valCompilation )
-                m_tag->itemListMap()[field] = TagLib::MP4::Item( value.toBool() );
+                m_tag->setItem(field, TagLib::MP4::Item( value.toBool() ));
             else
-                m_tag->itemListMap()[field] = TagLib::StringList( Qt4QStringToTString( value.toString() ) );
+                m_tag->setItem(field, TagLib::StringList( Qt4QStringToTString( value.toString() ) ));
 
             modified = true;
         }
@@ -130,7 +130,7 @@ MP4TagHelper::setTags( const Meta::FieldHash &changes )
             if( uidPair.first == UIDInvalid )
                 continue;
 
-            m_tag->itemListMap()[uidFieldName( uidPair.first )] = TagLib::StringList( Qt4QStringToTString( uidPair.second ) );
+            m_tag->setItem(uidFieldName( uidPair.first ), TagLib::StringList( Qt4QStringToTString( uidPair.second ) ));
             modified = true;
         }
     }
@@ -141,9 +141,9 @@ MP4TagHelper::setTags( const Meta::FieldHash &changes )
 bool
 MP4TagHelper::hasEmbeddedCover() const
 {
-    TagLib::MP4::ItemListMap map = m_tag->itemListMap();
+    TagLib::MP4::ItemMap map = m_tag->itemMap();
     TagLib::String name = fieldName( Meta::valHasCover );
-    for( TagLib::MP4::ItemListMap::ConstIterator it = map.begin(); it != map.end(); ++it )
+    for( TagLib::MP4::ItemMap::ConstIterator it = map.begin(); it != map.end(); ++it )
     {
         if( it->first == name )
         {
@@ -162,9 +162,9 @@ MP4TagHelper::hasEmbeddedCover() const
 QImage
 MP4TagHelper::embeddedCover() const
 {
-    TagLib::MP4::ItemListMap map = m_tag->itemListMap();
+    TagLib::MP4::ItemMap map = m_tag->itemMap();
     TagLib::String name = fieldName( Meta::valHasCover );
-    for( TagLib::MP4::ItemListMap::ConstIterator it = map.begin(); it != map.end(); ++it )
+    for( TagLib::MP4::ItemMap::ConstIterator it = map.begin(); it != map.end(); ++it )
     {
         if( it->first == name )
         {
@@ -200,7 +200,7 @@ MP4TagHelper::setEmbeddedCover( const QImage &cover )
 
     covers.append( TagLib::MP4::CoverArt( TagLib::MP4::CoverArt::JPEG, TagLib::ByteVector( bytes.data(), bytes.count() ) ) );
 
-    m_tag->itemListMap()[fieldName( Meta::valHasCover )] = TagLib::MP4::Item( covers );
+    m_tag->setItem(fieldName( Meta::valHasCover ), TagLib::MP4::Item( covers ));
 
     return true;
 }
diff --git a/shared/tag_helpers/TagHelper.cpp b/shared/tag_helpers/TagHelper.cpp
index 5a3b30009ed1c8ef3449049d5cb5432e96ce0cf6..2607e53fe247891a55746a9d18655a534839603f 100644
--- a/shared/tag_helpers/TagHelper.cpp
+++ b/shared/tag_helpers/TagHelper.cpp
@@ -331,7 +331,7 @@ Meta::Tag::selectHelper( const TagLib::FileRef &fileref, bool forceCreation )
     else if( TagLib::RIFF::WAV::File *file = dynamic_cast< TagLib::RIFF::WAV::File * >( fileref.file() ) )
     {
         if( file->tag() )
-            tagHelper = new ID3v2TagHelper( fileref.tag(), file->tag(), Amarok::Wav );
+            tagHelper = new ID3v2TagHelper( fileref.tag(), file->ID3v2Tag(), Amarok::Wav );
     }
     else if( TagLib::ASF::File *file = dynamic_cast< TagLib::ASF::File * >( fileref.file() ) )
     {
diff --git a/utilities/afttagger/AFTTagger.cpp b/utilities/afttagger/AFTTagger.cpp
index ae653e7beb9a8c184449fdc2992c57a18d924469..dace0b33056d4721c6599427076fc5106a2513f2 100644
--- a/utilities/afttagger/AFTTagger.cpp
+++ b/utilities/afttagger/AFTTagger.cpp
@@ -467,7 +467,7 @@ AFTTagger::handleXiphComment( TagLib::Ogg::XiphComment *comment, TagLib::File *f
             }
         }
         for( TagLib::StringList::ConstIterator iter = toRemove.begin(); iter != toRemove.end(); ++iter )
-            comment->removeField( *iter );
+            comment->removeFields( *iter );
     }
     if( newUid || ( nothingfound && !m_delete ) )
     {
@@ -611,10 +611,10 @@ AFTTagger::handleMP4( TagLib::MP4::File *file )
     if( m_verbose )
         m_textStream << tr( "INFO: File is a MP4 file, opening..." ) << Qt::endl;
 
-    TagLib::MP4::ItemListMap &itemsMap = file->tag()->itemListMap();
+    TagLib::MP4::ItemMap itemsMap = file->tag()->itemMap();
     if( !itemsMap.isEmpty() )
     {
-        for( TagLib::MP4::ItemListMap::Iterator it = itemsMap.begin(); it != itemsMap.end(); ++it )
+        for( TagLib::MP4::ItemMap::Iterator it = itemsMap.begin(); it != itemsMap.end(); ++it )
         {
             TagLib::String key = it->first;
             const QString qkey = TStringToQString( key ).toUpper();
