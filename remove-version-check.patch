diff --git a/cmd/root.go b/cmd/root.go
index 621c25e7..f3f8fa0d 100644
--- a/cmd/root.go
+++ b/cmd/root.go
@@ -54,7 +54,6 @@ var azcopyAwaitContinue bool
 var azcopyAwaitAllowOpenFiles bool
 var azcopyScanningLogger common.ILoggerResetable
 var azcopyCurrentJobID common.JobID
-var azcopySkipVersionCheck bool
 var retryStatusCodes string
 
 type jobLoggerInfo struct {
@@ -161,15 +160,6 @@ var rootCmd = &cobra.Command{
 			common.IncludeAfterFlagName, IncludeAfterDateFilter{}.FormatAsUTC(adjustedTime))
 		jobsAdmin.JobsAdmin.LogToJobLog(startTimeMessage, common.LogInfo)
 
-		if !azcopySkipVersionCheck {
-			// spawn a routine to fetch and compare the local application's version against the latest version available
-			// if there's a newer version that can be used, then write the suggestion to stderr
-			// however if this takes too long the message won't get printed
-			// Note: this function is necessary for non-help, non-login commands, since they don't reach the corresponding
-			// beginDetectNewVersion call in Execute (below)
-			beginDetectNewVersion()
-		}
-
 		if debugSkipFiles != "" {
 			for _, v := range strings.Split(debugSkipFiles, ";") {
 				if strings.HasPrefix(v, "/") {
@@ -201,16 +191,6 @@ func Execute(logPathFolder, jobPlanFolder string, maxFileAndSocketHandles int, j
 	if err := rootCmd.Execute(); err != nil {
 		glcm.Error(err.Error())
 	} else {
-		if !azcopySkipVersionCheck {
-			// our commands all control their own life explicitly with the lifecycle manager
-			// only commands that don't explicitly exit actually reach this point (e.g. help commands and login commands)
-			select {
-			case <-beginDetectNewVersion():
-				// noop
-			case <-time.After(time.Second * 8):
-				// don't wait too long
-			}
-		}
 		glcm.Exit(nil, common.EExitCode.Success())
 	}
 }
@@ -227,8 +207,6 @@ func init() {
 	rootCmd.PersistentFlags().StringVar(&cmdLineExtraSuffixesAAD, trustedSuffixesNameAAD, "", "Specifies additional domain suffixes where Azure Active Directory login tokens may be sent.  The default is '"+
 		trustedSuffixesAAD+"'. Any listed here are added to the default. For security, you should only put Microsoft Azure domains here. Separate multiple entries with semi-colons.")
 
-	rootCmd.PersistentFlags().BoolVar(&azcopySkipVersionCheck, "skip-version-check", false, "Do not perform the version check at startup. Intended for automation scenarios & airgapped use.")
-
 	// Note: this is due to Windows not supporting signals properly
 	rootCmd.PersistentFlags().BoolVar(&cancelFromStdin, "cancel-from-stdin", false, "Used by partner teams to send in `cancel` through stdin to stop a job.")
 
