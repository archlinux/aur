diff --color --unified --recursive --text '--exclude=.git' '--exclude=generated' '--exclude=build' '--exclude=_build' OpenRV.clean/cmake/defaults/rv_targets.cmake OpenRV/cmake/defaults/rv_targets.cmake
--- OpenRV.clean/cmake/defaults/rv_targets.cmake	2023-08-31 22:20:32.446579339 -0700
+++ OpenRV/cmake/defaults/rv_targets.cmake	2023-09-01 00:55:12.902900294 -0700
@@ -113,7 +113,7 @@
         BOOL TRUE "Detected a Redhat Entreprise Linux OS"
     )
   ELSE()
-    MESSAGE(FATAL_ERROR "Unknown or unsupported Linux distribution version; stopping configuration!")
+    MESSAGE(WARNING "Unknown or unsupported Linux distribution version!")
   ENDIF()
 ELSEIF(WIN32)
   MESSAGE(STATUS "Building RV for Microsoft Windows")
diff --color --unified --recursive --text '--exclude=.git' '--exclude=generated' '--exclude=build' '--exclude=_build' OpenRV.clean/cmake/dependencies/ffmpeg.cmake OpenRV/cmake/dependencies/ffmpeg.cmake
--- OpenRV.clean/cmake/dependencies/ffmpeg.cmake	2023-08-31 22:15:18.786591021 -0700
+++ OpenRV/cmake/dependencies/ffmpeg.cmake	2023-09-01 01:02:20.326217704 -0700
@@ -22,6 +22,14 @@
     "51ffa9de9e5b0c17cbabc0d8b780beb2"
 )
 
+SET(_git_repository
+    "https://git.ffmpeg.org/ffmpeg.git"
+)
+
+SET(_git_tag
+    "3d69f9682f06bbf72e0cdcdc9e66c9307ed6b24f"
+)
+
 SET(_install_dir
     ${RV_DEPS_BASE_DIR}/${_target}/install
 )
@@ -66,6 +74,11 @@
 SET(_configure_command
     sh ./configure
 )
+SET(_patch_command
+    git cherry-pick -n 988f2e9eb063db7c1a678729f58aab6eba59a55b;
+    git cherry-pick -n 031f1561cd286596cdb374da32f8aa816ce3b135;
+    git cherry-pick -n effadce6c756247ea8bae32dc13bb3e6f464f0eb;
+)
 
 IF(${RV_OSX_EMULATION})
   SET(_darwin_x86_64
@@ -182,13 +195,16 @@
 EXTERNALPROJECT_ADD(
   ${_target}
   DEPENDS dav1d::dav1d RV_DEPS_OPENSSL
-  DOWNLOAD_NAME ${_target}_${_version}.zip
-  DOWNLOAD_DIR ${RV_DEPS_DOWNLOAD_DIR}
-  DOWNLOAD_EXTRACT_TIMESTAMP TRUE
+  #DOWNLOAD_NAME ${_target}_${_version}.zip
+  #DOWNLOAD_DIR ${RV_DEPS_DOWNLOAD_DIR}
+  #DOWNLOAD_EXTRACT_TIMESTAMP TRUE
   INSTALL_DIR ${_install_dir}
-  URL ${_download_url}
-  URL_MD5 ${_download_hash}
+  #URL ${_download_url}
+  #URL_MD5 ${_download_hash}
+  GIT_REPOSITORY ${_git_repository}
+  GIT_TAG ${git_tag}
   SOURCE_DIR ${RV_DEPS_BASE_DIR}/${_target}/src
+  PATCH_COMMAND ${_patch_command}
   CONFIGURE_COMMAND
     ${CMAKE_COMMAND} -E env PKG_CONFIG_PATH=${RV_DEPS_DAVID_LIB_DIR}/pkgconfig ${_configure_command} --prefix=${_install_dir} --disable-programs --enable-shared
     --enable-openssl --enable-libdav1d --disable-iconv --disable-outdevs ${_toolchain} --extra-ldflags=${_ldflags} --extra-cflags=${_cflags}
diff --color --unified --recursive --text '--exclude=.git' '--exclude=generated' '--exclude=build' '--exclude=_build' OpenRV.clean/cmake/dependencies/qt5.cmake OpenRV/cmake/dependencies/qt5.cmake
--- OpenRV.clean/cmake/dependencies/qt5.cmake	2023-08-31 22:15:18.786591021 -0700
+++ OpenRV/cmake/dependencies/qt5.cmake	2023-09-01 01:44:20.512790492 -0700
@@ -21,11 +21,11 @@
 ENDIF()
 
 SET(RV_DEPS_QT5_RESOURCES_FOLDER
-    "${RV_DEPS_QT5_LOCATION}/resources"
+    "${RV_DEPS_QT5_LOCATION}/share/qt/resources"
     CACHE STRING "Path to the Qt resources files folder"
 )
 SET(RV_DEPS_QT5_TRANSLATIONS_FOLDER
-    "${RV_DEPS_QT5_LOCATION}/translations"
+    "${RV_DEPS_QT5_LOCATION}/share/qt/translations"
     CACHE STRING "Path to the Qt translations files folder"
 )
 
@@ -69,15 +69,15 @@
 )
   FILE(
     GLOB _qt_plugins_dirs
-    RELATIVE ${RV_DEPS_QT5_LOCATION}/plugins
-    ${RV_DEPS_QT5_LOCATION}/plugins/*
+    RELATIVE ${RV_DEPS_QT5_LOCATION}/lib/qt/plugins
+    ${RV_DEPS_QT5_LOCATION}/lib/qt/plugins/*
   )
   FOREACH(
     _qt_plugin_dir
     ${_qt_plugins_dirs}
   )
     FILE(
-      COPY ${RV_DEPS_QT5_LOCATION}/plugins/${_qt_plugin_dir}
+      COPY ${RV_DEPS_QT5_LOCATION}/lib/qt/plugins/${_qt_plugin_dir}
       DESTINATION ${RV_STAGE_PLUGINS_QT_DIR}
     )
   ENDFOREACH()
@@ -111,26 +111,26 @@
   SET(RV_DEPS_QT5_LIB_DIR
       ${RV_DEPS_QT5_LOCATION}/lib
   )
-  FILE(
-    GLOB libs_to_copy
-    RELATIVE ${RV_DEPS_QT5_LIB_DIR}
-    CONFIGURE_DEPENDS ${RV_DEPS_QT5_LIB_DIR}/*
-  )
-  FOREACH(
-    lib_to_copy
-    ${libs_to_copy}
-  )
-    FILE(
-      COPY ${RV_DEPS_QT5_LIB_DIR}/${lib_to_copy}
-      DESTINATION ${RV_STAGE_LIB_DIR}
-    )
-  ENDFOREACH()
-
-  MESSAGE(STATUS "Copying Qt libexec files ...")
-  FILE(
-    COPY "${RV_DEPS_QT5_LOCATION}/libexec"
-    DESTINATION "${RV_STAGE_ROOT_DIR}"
-  )
+  # FILE(
+  #   GLOB libs_to_copy
+  #   RELATIVE ${RV_DEPS_QT5_LIB_DIR}
+  #   CONFIGURE_DEPENDS ${RV_DEPS_QT5_LIB_DIR}/libQt*
+  # )
+  # FOREACH(
+  #   lib_to_copy
+  #   ${libs_to_copy}
+  # )
+  #   FILE(
+  #     COPY ${RV_DEPS_QT5_LIB_DIR}/${lib_to_copy}
+  #     DESTINATION ${RV_STAGE_LIB_DIR}
+  #   )
+  # ENDFOREACH()
+
+  # MESSAGE(STATUS "Copying Qt libexec files ...")
+  # FILE(
+  #   COPY "${RV_DEPS_QT5_LOCATION}/bin"
+  #   DESTINATION "${RV_STAGE_ROOT_DIR}"
+  # )
 
   MESSAGE(STATUS "Copying Qt resources files ...")
   FILE(
