diff --git a/src/calibre/db/backend.py b/src/calibre/db/backend.py
index ffc13cf..8e5c922 100644
--- a/src/calibre/db/backend.py
+++ b/src/calibre/db/backend.py
@@ -11,6 +11,7 @@ import errno
 import hashlib
 import json
 import os
+import re
 import shutil
 import sys
 import time
@@ -38,7 +39,7 @@ from calibre.utils import pickle_binary_string, unpickle_binary_string
 from calibre.utils.config import from_json, prefs, to_json, tweaks
 from calibre.utils.date import EPOCH, parse_date, utcfromtimestamp, utcnow
 from calibre.utils.filenames import (
-    WindowsAtomicFolderMove, ascii_filename, atomic_rename, copyfile_using_links,
+    WindowsAtomicFolderMove, atomic_rename, copyfile_using_links,
     copytree_using_links, hardlink_file, is_case_sensitive, is_fat_filesystem,
     remove_dir_if_empty, samefile,
 )
@@ -60,6 +61,10 @@ CUSTOM_DATA_TYPES = frozenset(('rating', 'text', 'comments', 'datetime',
 WINDOWS_RESERVED_NAMES = frozenset('CON PRN AUX NUL COM1 COM2 COM3 COM4 COM5 COM6 COM7 COM8 COM9 LPT1 LPT2 LPT3 LPT4 LPT5 LPT6 LPT7 LPT8 LPT9'.split())
 
 
+def safe_filename(filename):
+    return re.sub(r"[\/\\\:\*\?\"\<\>\|]", "_", filename)
+
+
 class DynamicFilter:  # {{{
 
     'No longer used, present for legacy compatibility'
@@ -1339,8 +1344,8 @@ class DB:
         '''
         book_id = ' (%d)' % book_id
         l = self.PATH_LIMIT - (len(book_id) // 2) - 2
-        author = ascii_filename(author)[:l]
-        title  = ascii_filename(title.lstrip())[:l].rstrip()
+        author = safe_filename(author)[:l]
+        title  = safe_filename(title.lstrip())[:l].rstrip()
         if not title:
             title = 'Unknown'[:l]
         try:
@@ -1349,7 +1354,7 @@ class DB:
         except IndexError:
             author = ''
         if not author:
-            author = ascii_filename(_('Unknown'))
+            author = safe_filename(_('Unknown'))
         if author.upper() in WINDOWS_RESERVED_NAMES:
             author += 'w'
         return f'{author}/{title}{book_id}'
@@ -1366,15 +1371,15 @@ class DB:
         l = (self.PATH_LIMIT - (extlen // 2) - 2) if iswindows else ((self.PATH_LIMIT - extlen - 2) // 2)
         if l < 5:
             raise ValueError('Extension length too long: %d' % extlen)
-        author = ascii_filename(author)[:l]
-        title  = ascii_filename(title.lstrip())[:l].rstrip()
+        author = safe_filename(author)[:l]
+        title  = safe_filename(title.lstrip())[:l].rstrip()
         if not title:
             title = 'Unknown'[:l]
         name   = title + ' - ' + author
         while name.endswith('.'):
             name = name[:-1]
         if not name:
-            name = ascii_filename(_('Unknown'))
+            name = safe_filename(_('Unknown'))
         return name
 
     # Database layer API {{{
