--- gpt4all-2.7.1.orig/gpt4all-chat/CMakeLists.txt	2024-02-22 05:05:49.000000000 +0800
+++ gpt4all-2.7.1.patched/gpt4all-chat/CMakeLists.txt	2024-02-23 19:46:52.090023864 +0800
@@ -68,7 +68,7 @@
   set(METAL_SHADER_FILE ../gpt4all-backend/llama.cpp-mainline/ggml-metal.metal)
 endif()
 
-qt_add_executable(chat
+qt_add_executable(gpt4all-chat
     main.cpp
     chat.h chat.cpp
     chatllm.h chatllm.cpp
@@ -89,7 +89,7 @@
     ${METAL_SHADER_FILE}
 )
 
-qt_add_qml_module(chat
+qt_add_qml_module(gpt4all-chat
     URI gpt4all
     VERSION 1.0
     NO_CACHEGEN
@@ -149,7 +149,7 @@
       icons/favicon.icns
 )
 
-set_target_properties(chat PROPERTIES
+set_target_properties(gpt4all-chat PROPERTIES
     MACOSX_BUNDLE_GUI_IDENTIFIER gpt4all
     MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
     MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
@@ -159,34 +159,34 @@
 )
 
 if(${CMAKE_SYSTEM_NAME} MATCHES Darwin)
-    set_target_properties(chat PROPERTIES
+    set_target_properties(gpt4all-chat PROPERTIES
         OUTPUT_NAME gpt4all
     )
 endif()
 
 if(METAL_SHADER_FILE)
-    set_target_properties(chat PROPERTIES
+    set_target_properties(gpt4all-chat PROPERTIES
         RESOURCE ${METAL_SHADER_FILE}
     )
     configure_file(${METAL_SHADER_FILE} bin/ggml-metal.metal COPYONLY)
 endif()
 
-target_compile_definitions(chat
+target_compile_definitions(gpt4all-chat
     PRIVATE $<$<OR:$<CONFIG:Debug>,$<CONFIG:RelWithDebInfo>>:QT_QML_DEBUG>)
 if(LINUX)
-  target_link_libraries(chat
+  target_link_libraries(gpt4all-chat
       PRIVATE Qt6::Quick Qt6::Svg Qt6::HttpServer Qt6::Sql Qt6::Pdf Qt6::WaylandCompositor)
 else()
-  target_link_libraries(chat
+  target_link_libraries(gpt4all-chat
     PRIVATE Qt6::Quick Qt6::Svg Qt6::HttpServer Qt6::Sql Qt6::Pdf)
 endif()
-target_link_libraries(chat
+target_link_libraries(gpt4all-chat
     PRIVATE llmodel)
 
 set(COMPONENT_NAME_MAIN ${PROJECT_NAME})
 set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/install)
 
-install(TARGETS chat DESTINATION bin COMPONENT ${COMPONENT_NAME_MAIN})
+install(TARGETS gpt4all-chat DESTINATION bin COMPONENT ${COMPONENT_NAME_MAIN})
 install(TARGETS llmodel DESTINATION lib COMPONENT ${COMPONENT_NAME_MAIN})
 
 # We should probably iterate through the list of the cmake for backend, but these need to be installed
