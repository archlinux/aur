From 8f3bc180700b12f533f6c9b56f11ab69e8aadcf9 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Gonzalo=20Tornar=C3=ADa?= <tornaria@cmat.edu.uy>
Date: Sun, 20 Aug 2023 20:12:44 -0700
Subject: [PATCH 6/6] sage.sandpiles, sage.schemes: Support old and new
 Singular sat API

---
 src/sage/sandpiles/sandpile.py                      | 10 ++++++++--
 src/sage/schemes/projective/projective_subscheme.py |  5 ++++-
 2 files changed, 12 insertions(+), 3 deletions(-)

diff --git a/src/sage/sandpiles/sandpile.py b/src/sage/sandpiles/sandpile.py
index 02d2021b2fb..c8e15e06f05 100644
--- a/src/sage/sandpiles/sandpile.py
+++ b/src/sage/sandpiles/sandpile.py
@@ -2493,9 +2493,15 @@ def _set_ideal(self):
             sage: '_ideal' in S.__dict__
             True
         """
+        from sage.libs.singular.function_factory import ff
+        try:
+            sat = ff.elim__lib.sat_with_exp
+        except NameError:
+            sat = ff.elim__lib.sat
         R = self.ring()
-        I = self._unsaturated_ideal._singular_()
-        self._ideal = R.ideal(I.sat(prod(R.gens())._singular_())[1])
+        I = self._unsaturated_ideal
+        I_sat_gens = sat(I, prod(R.gens()))[0]
+        self._ideal = R.ideal(I_sat_gens)
 
     def unsaturated_ideal(self):
         r"""
diff --git a/src/sage/schemes/projective/projective_subscheme.py b/src/sage/schemes/projective/projective_subscheme.py
index e6caf19ba74..afd6484d779 100644
--- a/src/sage/schemes/projective/projective_subscheme.py
+++ b/src/sage/schemes/projective/projective_subscheme.py
@@ -1001,7 +1001,10 @@ def dual(self):
         for i in range(n + 1):
             J = J + S.ideal(z[-1] * f_S.derivative(z[i]) - z[i + n + 1])
 
-        sat = ff.elim__lib.sat
+        try:
+            sat = ff.elim__lib.sat_with_exp
+        except NameError:
+            sat = ff.elim__lib.sat
 
         max_ideal = S.ideal(z[n + 1: 2 * n + 2])
         J_sat_gens = sat(J, max_ideal)[0]
