# Changes in version v0.13.0:

## Breaking changes

- jj git fetch no longer imports new remote branches as local branches. Set
git.auto-local-branch = true to restore the old behavior.

## New features

- Information about new and resolved conflicts is now printed by every command.

- jj branch has gained a new rename subcommand that allows changing a branch
name atomically. jj branch help rename for details.

## Fixed bugs

- Command aliases can now be loaded from repository config relative to the
current working directory. #2414



# Changes in version v0.12.0:

## Breaking changes

- The remote_branches() revset no longer includes branches exported to the Git
repository (so called Git-tracking branches.)

- jj branch set no longer creates a new branch. Use jj branch create instead.

- jj init --git in an existing Git repository now errors and exits rather than
creating a second Git store.

## New features

- jj workspace add can now take multiple --revision arguments, which will create
a new workspace with its working-copy commit on top of all the parents, as if
you had run jj new r1 r2 r3 ....

- You can now set git.abandon-unreachable-commits = false to disable the usual
behavior where commits that became unreachable in the Git repo are abandoned
(#2504).

- jj new gained a --no-edit option to prevent editing the newly created commit.
For example, jj new a b --no-edit -m Merge creates a merge commit without
affecting the working copy.

- jj rebase now takes the flag --skip-empty, which doesn't copy over commits
that would become empty after a rebase.

- There is a new jj util gc command for cleaning up the repository storage. For
now, it simply runs git gc on the backing Git repo (when using the Git backend).

## Fixed bugs

- Fixed another file conflict resolution issue where jj status would disagree
with the actual file content. #2654
