From 921e0ccad1b06656980d3c93882c28655846c057 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Thomas=20Wei=C3=9Fschuh?= <thomas@t-8ch.de>
Date: Sat, 3 Jun 2023 07:56:38 +0200
Subject: [PATCH] ocaml: allow callbacks to be run outside of block
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fixes the following test crash:

 #0  0x00007f7266bc026c in ?? () from /usr/lib/libc.so.6
 #1  0x00007f7266b70a08 in raise () from /usr/lib/libc.so.6
 #2  0x00007f7266b59538 in abort () from /usr/lib/libc.so.6
 #3  0x0000561ebc538fea in caml_fatal_error ()
 #4  0x0000561ebc539aba in caml_plat_fatal_error ()
 #5  0x0000561ebc524d19 in caml_acquire_domain_lock ()
 #6  0x0000561ebc53c71d in caml_leave_blocking_section ()
 #7  0x0000561ebc500d8e in debug_wrapper ()
 #8  0x00007f7266e2757f in nbd_internal_debug ()
    from /home/t-8ch/src/aur/libnbd/src/libnbd-1.16.1/lib/.libs/libnbd.so.0
 #9  0x00007f7266e289d4 in nbd_close ()
    from /home/t-8ch/src/aur/libnbd/src/libnbd-1.16.1/lib/.libs/libnbd.so.0
 #10 0x0000561ebc5112d1 in nbd_internal_ocaml_nbd_close ()
 #11 <signal handler called>
 #12 0x0000561ebc4b5cd0 in camlTest_140_explicit_close__entry () at test_140_explicit_close.ml:31
 #13 0x0000561ebc4b343b in caml_program ()
 #14 <signal handler called>
 #15 0x0000561ebc543847 in caml_startup_common ()
 #16 0x0000561ebc5438bf in caml_main ()
 #17 0x0000561ebc4b30e1 in main ()

Based on a similar patch to libguestfs from Jürgen Hötzel.
https://listman.redhat.com/archives/libguestfs/2023-May/031640.html
---
 generator/OCaml.ml | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/generator/OCaml.ml b/generator/OCaml.ml
index edb81f2517d0..e269d6797319 100644
--- a/generator/OCaml.ml
+++ b/generator/OCaml.ml
@@ -584,11 +584,15 @@ let print_ocaml_closure_wrapper { cbname; cbargs } =
   pr "{\n";
   pr "  int ret = 0;\n";
   pr "\n";
-  pr "  caml_leave_blocking_section ();\n";
+  pr "  bool in_blocking_section = caml_state == NULL;\n";
+  pr "\n";
+  pr "  if (in_blocking_section)\n";
+  pr "    caml_leave_blocking_section ();\n";
   pr "  ret = %s_wrapper_locked " cbname;
   C.print_cbarg_list ~wrap:true ~types:false cbargs;
   pr ";\n";
-  pr "  caml_enter_blocking_section ();\n";
+  pr "  if (in_blocking_section)\n";
+  pr "    caml_enter_blocking_section ();\n";
   pr "  return ret;\n";
   pr "}\n";
   pr "\n"

base-commit: 03de45149acc1ef7733c91159fe0cb5a81e1b38f
-- 
2.41.0

