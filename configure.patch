--- configure	2021-08-08 10:32:02.637988859 +0000
+++ configure	2021-08-08 10:31:14.808470930 +0000
@@ -497,19 +497,19 @@
 
 $arch_cc          = "cc";
 $arch_ccpp        = "CC";
-$arch_nvcc        = "/usr/local/cuda-10.2/bin/nvcc";
+$arch_nvcc        = "nvcc";
 $arch_nvccflags   = "-lineinfo --ptxas-options=-v " . 
-                    "-gencode arch=compute_30,code=compute_30 " .
-                    "-gencode arch=compute_30,code=sm_35 " .
-                    "-gencode arch=compute_30,code=sm_37 " .
-                    "-gencode arch=compute_50,code=compute_50 " .
+                    "-gencode arch=compute_35,code=sm_35 " .
+                    "-gencode arch=compute_35,code=sm_37 " .
                     "-gencode arch=compute_50,code=sm_50 " .
-                    "-gencode arch=compute_60,code=compute_60 " .
+                    "-gencode arch=compute_52,code=sm_52 " .
                     "-gencode arch=compute_60,code=sm_60 " .
-                    "-gencode arch=compute_70,code=compute_70 " .
+                    "-gencode arch=compute_61,code=sm_61 " .
                     "-gencode arch=compute_70,code=sm_70 " .
+                    "-gencode arch=compute_75,code=sm_75 " .
+                    "-gencode arch=compute_80,code=sm_80 " .
+                    "-gencode arch=compute_86,code=sm_86 " .
                     "--ftz=true ";
-#                    "-gencode arch=compute_75,code=sm_75 " .
 $arch_gcc         = "gcc";
 $arch_gccpp       = "g++";
 $arch_lex         = "lex";
@@ -782,8 +782,8 @@
 if ($config_tk) { $tcl_include .= " -I$stock_tk_include_dir"; }
 $tcl_library      = "-L$stock_tcl_library_dir";
 if ($config_tk) { $tcl_library .= " -L$stock_tk_library_dir"; }
-$tcl_libs         = "-ltcl8.5";  
-if ($config_tk) { $tcl_libs = "-ltk8.5 -lX11 " . $tcl_libs; }
+$tcl_libs         = "-ltcl";  
+if ($config_tk) { $tcl_libs = "-ltk -lX11 " . $tcl_libs; }
 
 @tcl_cc           = ();
 @tcl_cu           = ();
@@ -911,13 +911,7 @@
 $system_dir           = "";
 $system_include       = "-I.";
 $system_library       = "";
-if ( $config_gcc ) {
-  ## Note: some old commercial versions of Unix require -ll for lex internals
-  ## now that we've been using flex for years, -ll should be moot.
-  $system_libs        = "-lm";
-} else {
-  $system_libs        = "-lm";
-}
+$system_libs          = "-lrt -lm";
 @system_cc             = ();
 @system_cu             = ();
 @system_ccpp           = ();
@@ -992,10 +986,10 @@
 #   This option enables the use of CUDA GPU acceleration functions.
 #######################
 $cuda_defines     = "-DVMDCUDA -DMSMPOT_CUDA";
-$cuda_dir         = "/usr/local/cuda-10.2";
+$cuda_dir         = "/opt/cuda";
 $cuda_include     = "";
 $cuda_library     = "";
-$cuda_libs        = "-Wl,-rpath -Wl,\$\$ORIGIN/ -lcudart_static -lrt";
+$cuda_libs        = "-Wl,-rpath -Wl,\$\$ORIGIN/ -lcudart -lrt";
 @cuda_cc          = ();
 @cuda_cu	  = ('msmpot_cuda.cu',
                      'msmpot_cuda_latcut.cu',
@@ -1052,15 +1046,15 @@
 #######################
 $mpi_defines     = "-DVMDMPI ";
 ## Argonne MPICH
-$mpi_dir         = "/usr/lib64/mpich";
-$mpi_include     = "-I/usr/include/mpich-x86_64";
-$mpi_library     = "-L$mpi_dir/lib";
-$mpi_libs        = "-lmpich";
+#$mpi_dir         = "/usr";
+#$mpi_include     = "-I/usr/include";
+#$mpi_library     = "-L$mpi_dir/lib";
+#$mpi_libs        = "-lmpicxx -lmpi";
 ## OpenMPI
-# $mpi_dir         = "/usr/lib64/openmpi";
-# $mpi_include     = "-I/usr/include/openmpi-x86_64";
-# $mpi_library     = "-L$mpi_dir/lib";
-# $mpi_libs        = "-lmpi";
+$mpi_dir         = "/usr";
+$mpi_include     = "-I/usr/include";
+$mpi_library     = "-L$mpi_dir/lib/openmpi";
+$mpi_libs        = "-lmpi_cxx -lmpi";
 ## OSU MVAPICH
 # $mpi_dir         = "/usr/mpi/gcc/mvapich-1.0.0";
 # $mpi_include     = "-I$mpi_dir/include";
@@ -1201,7 +1195,7 @@
 # $liboptix_dir         = "/usr/local/encap/NVIDIA-OptiX-SDK-5.0.1-linux64";
 # $liboptix_dir         = "/usr/local/encap/NVIDIA-OptiX-SDK-5.1.0-linux64";
 # $liboptix_dir         = "/usr/local/encap/NVIDIA-OptiX-SDK-6.0.0-linux64";
-$liboptix_dir         = "/usr/local/encap/NVIDIA-OptiX-SDK-6.5.0-linux64";
+$liboptix_dir         = "/opt/optix";
 # $liboptix_dir         = "/usr/local/encap/NVIDIA-OptiX-SDK-7.0.0-linux64";
 
 # NCSA Blue Waters
@@ -1314,7 +1308,7 @@
   $libospray2_dir         = "/usr/local/ospray-2.1.1.x86_64.linux";
   $libospray2_include     = "-I$libospray2_dir/include -I$libospray2_dir/ospray/include ";
   $libospray2_library     = "-L$libospray2_dir/lib ";
-  $libospray2_libs        = "-lospray -lospcommon -lembree3 -ltbb -ltbbmalloc ";
+  $libospray2_libs        = "-lospray -lembree3 -ltbb -ltbbmalloc ";
 }
 
 # Both OptiX and OSPRay renderers use the Tachyon glwin code,
@@ -1650,16 +1644,16 @@
   $stock_numpy_library_dir=$ENV{"NUMPY_LIBRARY_DIR"} || "$conda_root/lib/python-3.7/site-packages/numpy/core/include";
   $python_libs        = "-fno-lto -lpython3.7m -lpthread";
 } else {
-#  $stock_python_include_dir=$ENV{"PYTHON_INCLUDE_DIR"} || "/usr/local/include";
-#  $stock_python_library_dir=$ENV{"PYTHON_LIBRARY_DIR"} || "/usr/local/lib";
-  $stock_python_include_dir=$ENV{"PYTHON_INCLUDE_DIR"} || "$vmd_library_dir/python/lib_$config_arch/include/python2.5";
-  $stock_python_library_dir=$ENV{"PYTHON_LIBRARY_DIR"} || "$vmd_library_dir/python/lib_$config_arch/lib/python2.5/config";
-
-#  $stock_numpy_include_dir=$ENV{"NUMPY_INCLUDE_DIR"} || "/usr/local/include";
-#  $stock_numpy_library_dir=$ENV{"NUMPY_LIBRARY_DIR"} || "/usr/local/lib";
-  $stock_numpy_include_dir=$ENV{"NUMPY_INCLUDE_DIR"} || "$vmd_library_dir/numpy/lib_$config_arch/include";
-  $stock_numpy_library_dir=$ENV{"NUMPY_LIBRARY_DIR"} || "$vmd_library_dir/python/lib_$config_arch/lib/python2.5/site-packages/numpy/core/include";
-  $python_libs        = "-lpython2.5 -lpthread";
+  $stock_python_include_dir=$ENV{"PYTHON_INCLUDE_DIR"} || "/usr/include/python3.11";
+  $stock_python_library_dir=$ENV{"PYTHON_LIBRARY_DIR"} || "/usr/lib/python3.11/config-3.11-x86_64-linux-gnu";
+#   $stock_python_include_dir=$ENV{"PYTHON_INCLUDE_DIR"} || "$vmd_library_dir/python/lib_$config_arch/include/python2.5";
+#   $stock_python_library_dir=$ENV{"PYTHON_LIBRARY_DIR"} || "$vmd_library_dir/python/lib_$config_arch/lib/python2.5/config";
+
+  $stock_numpy_include_dir=$ENV{"NUMPY_INCLUDE_DIR"} || "/usr/lib/python3.11/site-packages/numpy/core/include/numpy";
+  $stock_numpy_library_dir=$ENV{"NUMPY_LIBRARY_DIR"} || "/usr/lib/python3.11/site-packages/numpy/core/include";
+#   $stock_numpy_include_dir=$ENV{"NUMPY_INCLUDE_DIR"} || "$vmd_library_dir/numpy/lib_$config_arch/include";
+#   $stock_numpy_library_dir=$ENV{"NUMPY_LIBRARY_DIR"} || "$vmd_library_dir/python/lib_$config_arch/lib/python2.5/site-packages/numpy/core/include";
+  $python_libs        = "-lpython3.11 -lpthread";
 }
 
 $python_defines     = "-DVMDPYTHON";
@@ -2559,9 +2553,9 @@
       # for compiling with g++:
       $arch_cc		= "gcc";
       $arch_ccpp  	= "g++";
-      $arch_opt_flag	= "-m64 -fno-for-scope -Wno-deprecated -Wall -Wno-unknown-pragmas -O6 -ffast-math";
+      $arch_opt_flag	= "-Ofast -march=native";
       $arch_depend_flag   = "-MM";
-      $arch_copts       = "-m64 -Wall -Wno-unknown-pragmas -O6 -ffast-math";
+      $arch_copts       = "-Ofast -march=native";
 
       # so far only STATIC version tested
       if ($config_static) {
@@ -2573,7 +2567,7 @@
 
     if ($config_cuda) {
       $arch_nvccflags   .= " --machine 64 -O3 $cuda_include";
-      $cuda_library     = "-L/usr/local/cuda-10.2/lib64";
+      $cuda_library     = "-L/opt/cuda/lib64";
     }
 
     $arch_lex		= "flex"; # has problems with vendor lex
@@ -2605,13 +2599,13 @@
 
 
 if ($config_arch eq "LINUXARM64") {
-  $tcl_libs         = "-ltcl8.5";
-  if ($config_tk) { $tcl_libs = "-ltk8.5 -lX11 " . $tcl_libs; }
+  $tcl_libs         = "-ltcl";
+  if ($config_tk) { $tcl_libs = "-ltk -lX11 " . $tcl_libs; }
   $vmd_libs          = "$tcl_libs -lz";
 
   $arch_nvcc     = "/usr/local/cuda/bin/nvcc";
   $arch_nvccflags   = "--ptxas-options=-v " .
-                    "-gencode arch=compute_30,code=compute_30 " .
+                    "-gencode arch=compute_35,code=compute_35 " .
                     "-gencode arch=compute_70,code=compute_70 " .
                     "--ftz=true ";
   $cuda_library     = "-L/usr/local/cuda/lib64";
@@ -2635,11 +2629,7 @@
 
   $arch_nvcc     = "/usr/local/cuda-5.5/bin/nvcc";
   $arch_nvccflags   = "--ptxas-options=-v " . 
-                    "-gencode arch=compute_20,code=sm_20 " .
-                    "-gencode arch=compute_30,code=sm_30 " .
                     "-gencode arch=compute_35,code=sm_35 " .
-                    "-gencode arch=compute_20,code=compute_20 " .
-                    "-gencode arch=compute_30,code=compute_30 " .
                     "--ftz=true ";
   $cuda_library     = "-L/usr/local/cuda/lib";
   $arch_cc       = "cc";
