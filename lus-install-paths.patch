diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index f95c3c9..6040470 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -85,6 +85,11 @@ set(Source_Files__Core
 
 source_group("Core" FILES ${Source_Files__Core})
 
+if (DEFINED SHIP_BIN_DIR)
+set_source_files_properties(${CMAKE_CURRENT_SOURCE_DIR}/core/Context.cpp
+    PROPERTIES COMPILE_DEFINITIONS SHIP_BIN_DIR="${SHIP_BIN_DIR}")
+endif()
+
 set(Source_Files__Core__Libultra
     ${CMAKE_CURRENT_SOURCE_DIR}/core/libultra/os.h
     ${CMAKE_CURRENT_SOURCE_DIR}/core/libultra/os.cpp
diff --git a/src/core/Context.cpp b/src/core/Context.cpp
index 776333e..02eabe6 100644
--- a/src/core/Context.cpp
+++ b/src/core/Context.cpp
@@ -281,6 +281,9 @@ std::string Context::GetShortName() {
 }
 
 std::string Context::GetAppBundlePath() {
+#ifdef SHIP_BIN_DIR
+    return SHIP_BIN_DIR;
+#else
 #ifdef __APPLE__
     FolderManager folderManager;
     return folderManager.getMainBundlePath();
@@ -294,6 +297,7 @@ std::string Context::GetAppBundlePath() {
 #endif
 
     return ".";
+#endif
 }
 
 std::string Context::GetAppDirectoryPath() {
@@ -304,6 +308,13 @@ std::string Context::GetAppDirectoryPath() {
     }
 #endif
 
+    char *prefpath = SDL_GetPrefPath(NULL, "soh");
+    if (prefpath != NULL) {
+        std::string ret(prefpath);
+        SDL_free(prefpath);
+        return ret;
+    }
+
     return ".";
 }
 
@@ -315,7 +326,24 @@ std::string Context::GetPathRelativeToAppDirectory(const char* path) {
     return GetAppDirectoryPath() + "/" + path;
 }
 
+std::string Context::FindFileFromAllAppDirectories(const char* path) {
+    std::string fpath;
+
+    // app configuration dir (eg. ~/.local/share)
+    fpath = GetPathRelativeToAppDirectory(path);
+    if (std::filesystem::exists(fpath)) {
+        return fpath;
+    }
+    // app install dir (eg. /usr/)
+    fpath = GetPathRelativeToAppBundle(path);
+    if (std::filesystem::exists(fpath)) {
+        return fpath;
+    }
+    // current dir
+    return "./" + std::string(path);
+}
+
 bool Context::DoesOtrFileExist() {
     return mOtrFileExists;
 }
-} // namespace LUS
\ No newline at end of file
+} // namespace LUS
diff --git a/src/core/Context.h b/src/core/Context.h
index c32f4dd..a9f1639 100644
--- a/src/core/Context.h
+++ b/src/core/Context.h
@@ -26,6 +26,7 @@ class Context {
     static std::string GetAppDirectoryPath();
     static std::string GetPathRelativeToAppDirectory(const char* path);
     static std::string GetPathRelativeToAppBundle(const char* path);
+    static std::string FindFileFromAllAppDirectories(const char* path);
 
     Context(std::string name, std::string shortName);
 
diff --git a/src/core/libultra/os.cpp b/src/core/libultra/os.cpp
index 9058fe1..2956b7f 100644
--- a/src/core/libultra/os.cpp
+++ b/src/core/libultra/os.cpp
@@ -21,8 +21,8 @@ int32_t osContInit(OSMesgQueue* mq, uint8_t* controllerBits, OSContStatus* statu
     }
 
 #ifndef __SWITCH__
-    const char* controllerDb = "gamecontrollerdb.txt";
-    int mappingsAdded = SDL_GameControllerAddMappingsFromFile(controllerDb);
+    std::string controllerDb = LUS::Context::FindFileFromAllAppDirectories("gamecontrollerdb.txt");
+    int mappingsAdded = SDL_GameControllerAddMappingsFromFile(controllerDb.c_str());
     if (mappingsAdded >= 0) {
         SPDLOG_INFO("Added SDL game controllers from \"{}\" ({})", controllerDb, mappingsAdded);
     } else {
@@ -90,4 +90,4 @@ int32_t osRecvMesg(OSMesgQueue* mq, OSMesg* msg, int32_t flag) {
     mq->validCount--;
     return 0;
 }
-}
\ No newline at end of file
+}
