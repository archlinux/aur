diff --git a/configure.ac b/configure.ac
index a6d5842..c29cf85 100644
--- a/configure.ac
+++ b/configure.ac
@@ -30,98 +30,3 @@ AC_SUBST(AR)
 
 AC_CONFIG_FILES([src/Makevars])
 AC_OUTPUT
-
-## check if we have an x86 CPU
-machine=`uname -m`
-AS_CASE([$machine],
-  [*86*], [x86_CPU=true],
-  [x86_CPU=false]
-)
-
-## see if -msse2 is a supported flag
-AX_CHECK_COMPILE_FLAG([-msse2], [MSSE2=true], [MSSE2=false])
-
-if [ "${IS_BIOC_BUILD_MACHINE}" == true ]; then
-  AC_MSG_NOTICE(Bioc build machine; disabling MAVX2)
-  MAVX2=false
-else
-  ## see if -mavx2 is a supported flag
-  AX_CHECK_COMPILE_FLAG([-mavx2], [MAVX2=true], [MAVX2=false])
-fi
-
-AC_RUN_IFELSE(
-      [AC_LANG_PROGRAM([#include <stdlib.h>],
-        [__builtin_cpu_init ();])
-      ],
-      [ax_cv_gcc_check_x86_cpu_init=true],
-      [ax_cv_gcc_check_x86_cpu_init=false])
-
-## check CPU supports sse2 and avx2
-if [ "$x86_CPU" == true ] && [ "$ax_cv_gcc_check_x86_cpu_init" == true ]; then
-    AX_GCC_X86_CPU_SUPPORTS(sse2, [SSE2_SUPPORTED=true], [SSE2_SUPPORTED=false])
-    if [ "$MAVX2" = true ]; then
-      AX_GCC_X86_CPU_SUPPORTS(avx2, [AVX2_SUPPORTED=true], [AVX2_SUPPORTED=false])
-    fi
-else
-    SSE2_SUPPORTED=false
-    AVX2_SUPPORTED=false
-fi
-
-if [ "$MSSE2" = true ] && [ "$SSE2_SUPPORTED" = true ] ; then
-  SSE2="-DSHUFFLE_SSE2_ENABLED"
-  MSSE2="-msse2"
-  SSE2_BITSHUFFLE='bitshuffle-sse2.o: bitshuffle-sse2.c
-	$(CC) $(FLAGS) -c bitshuffle-sse2.c'
-  SSE2_BITSHUFFLE_OBJ='bitshuffle-sse2.o'
-  SSE2_SHUFFLE='shuffle-sse2.o: shuffle-sse2.c
-	$(CC) $(FLAGS) -c shuffle-sse2.c'
-  SSE2_SHUFFLE_OBJ='shuffle-sse2.o'
-  SSE2_OBJ_PATH='lib/blosc-1.20.1/'
-else
-  SSE2=""
-  MSSE2=""
-  SSE2_BITSHUFFLE=""
-  SSE2_SHUFFLE=""
-  SSE2_BITSHUFFLE_OBJ=""
-  SSE2_SHUFFLE_OBJ=""
-  SSE2_OBJ_PATH=""
-fi
-
-AC_SUBST(SSE2)
-AC_SUBST(MSSE2)
-AC_SUBST(SSE2_BITSHUFFLE)
-AC_SUBST(SSE2_SHUFFLE)
-AC_SUBST(SSE2_BITSHUFFLE_OBJ)
-AC_SUBST(SSE2_SHUFFLE_OBJ)
-AC_SUBST(SSE2_OBJ_PATH)
-
-if [ "$MAVX2" = true ] && [ "$AVX2_SUPPORTED" = true ] ; then
-  AVX2="-DSHUFFLE_AVX2_ENABLED"
-  MAVX2="-mavx2"
-  AVX2_BITSHUFFLE='bitshuffle-avx2.o: bitshuffle-avx2.c
-	$(CC) $(FLAGS) -c bitshuffle-avx2.c'
-  AVX2_BITSHUFFLE_OBJ='bitshuffle-avx2.o'
-  AVX2_SHUFFLE='shuffle-avx2.o: shuffle-avx2.c
-	$(CC) $(FLAGS) -c shuffle-avx2.c'
-  AVX2_SHUFFLE_OBJ='shuffle-avx2.o'
-  AVX2_OBJ_PATH='lib/blosc-1.20.1/'
-else
-  AVX2=""
-  MAVX2=""
-  AVX2_BITSHUFFLE=""
-  AVX2_SHUFFLE=""
-  AVX2_BITSHUFFLE_OBJ=""
-  AVX2_SHUFFLE_OBJ=""
-  AVX2_OBJ_PATH=""
-fi
-
-AC_SUBST(AVX2)
-AC_SUBST(MAVX2)
-AC_SUBST(AVX2_BITSHUFFLE)
-AC_SUBST(AVX2_SHUFFLE)
-AC_SUBST(AVX2_BITSHUFFLE_OBJ)
-AC_SUBST(AVX2_SHUFFLE_OBJ)
-AC_SUBST(AVX2_OBJ_PATH)
-
-AC_CONFIG_FILES([src/compression_tools/blosc/lib/blosc-1.20.1/Makefile src/compression_tools/blosc/Makefile])
-AC_OUTPUT
diff --git a/src/Makevars.in b/src/Makevars.in
index bcb0b4f..91881df 100644
--- a/src/Makevars.in
+++ b/src/Makevars.in
@@ -9,12 +9,10 @@ export PKG_R_CPPFLAGS=@R_CPPFLAGS@
 
 COMPRESSION_LIBS=compression_tools/blosc/libblosc.a
 
-PKG_LIBS=$(COMPRESSION_LIBS)
+PKG_LIBS = -lblosc -llz4
 
 all: $(SHLIB)
 
-$(SHLIB): compression_libs
-
 compression_libs: $(COMPRESSION_LIBS)
 
 compression_tools/blosc/libblosc.a:
diff --git a/src/compress.h b/src/compress.h
index 573e203..72ddd98 100644
--- a/src/compress.h
+++ b/src/compress.h
@@ -2,9 +2,9 @@
 
 #ifndef _COMPRESSION_H
   #define _COMPRESSION_H
-  #include "compression_tools/blosc/lib/blosc-1.20.1/blosc.h"
-  #include "compression_tools/blosc/lib/lz4-1.9.2/lz4.h"
-  #include "compression_tools/blosc/lib/lz4-1.9.2/lz4hc.h"
+  #include <blosc.h>
+  #include <lz4.h>
+  #include <lz4hc.h>
 #endif
 
 SEXP compress_chunk_BLOSC(SEXP input, SEXP type_size);
diff --git a/src/decompress.h b/src/decompress.h
index a13b390..3ed84e7 100644
--- a/src/decompress.h
+++ b/src/decompress.h
@@ -2,9 +2,9 @@
 
 #ifndef _COMPRESSION_H
   #define _COMPRESSION_H
-  #include "compression_tools/blosc/lib/blosc-1.20.1/blosc.h"
-  #include "compression_tools/blosc/lib/lz4-1.9.2/lz4.h"
-  #include "compression_tools/blosc/lib/lz4-1.9.2/lz4hc.h"
+  #include <blosc.h>
+  #include <lz4.h>
+  #include <lz4hc.h>
 #endif
 
 SEXP decompress_chunk_BLOSC(SEXP input);
