diff --git a/lexconvert.py b/lexconvert.py
index af4dca5..1e7c46a 100644
--- a/lexconvert.py
+++ b/lexconvert.py
@@ -3566,8 +3566,9 @@ class MacBritish_System_Lexicon(object):
             err = os.system("sudo touch \""+lexFile+"\" ; sudo chown "+str(os.getuid())+" \""+lexFile+"\"")
             assert not err, "Error creating lexdir"
         compat_err = "\nThis probably means your Mac has a new version of the voice that is no longer compatible with this system-lexicon patch."
-        import cPickle
-        if os.path.exists(lexFile) and os.stat(lexFile).st_size: self.wordIndexStart,self.wordIndexEnd,self.phIndexStart,self.phIndexEnd = cPickle.Unpickler(open(lexFile)).load()
+        try: import pickle
+        except ImportError: import cPickle as pickle # pre-PEP 3108 (i.e. Python <3.0)
+        if os.path.exists(lexFile) and os.stat(lexFile).st_size: self.wordIndexStart,self.wordIndexEnd,self.phIndexStart,self.phIndexEnd = pickle.Unpickler(open(lexFile)).load()
         else:
             f = open(self.filename)
             dat = getBuf(f).read()
@@ -3585,7 +3586,7 @@ class MacBritish_System_Lexicon(object):
             self.phIndexStart = findW("'e&It.o&U.e&Its")
             self.wordIndexEnd = findW("zombie",1)
             self.phIndexEnd = findW("'zA+m.bI",1)
-            if not text==False: cPickle.Pickler(open(lexFile,"w")).dump((self.wordIndexStart,self.wordIndexEnd,self.phIndexStart,self.phIndexEnd))
+            if not text==False: pickle.Pickler(open(lexFile,"w")).dump((self.wordIndexStart,self.wordIndexEnd,self.phIndexStart,self.phIndexEnd))
         if text==False: self.dFile = open(self.filename)
         else: self.dFile = open(self.filename,'r+')
         assert len(self.allWords()) == len(self.allPh()), str(len(self.allWords()))+" words but "+str(len(self.allPh()))+" phonemes"+compat_err
