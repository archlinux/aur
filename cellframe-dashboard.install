_showmsg() {
    cat << EOF

    ########################################################################
    ########################################################################
    ##                                                                    ##
    ##  Cellframe Dashboard - The super application with Cellframe node   ##
    ##  ______________________________________________________________    ##
    ##                                                                    ##
    ##  To start:                                                         ##
    ##                                                                    ##
    ##   1. systemctl enable --now cellframe-node.service                 ##
    ##                                                                    ##
    ##   2. systemctl enable --now cellframe-dashboard.service            ##
    ##                                                                    ##
    ##   3. Launch Cellframe Dashboard from your applications             ##
    ##                                                                    ##
    ##   OPTIONAL:                                                        ##
    ##   systemctl enable --now cellframe-node-logrotate.timer            ##
    ##                                                                    ##
    ##   For more aggressive log rotating                                 ##
    ##                                                                    ##
    ########################################################################
    ########################################################################

EOF
}

post_install() {
    NODE_PATH="/opt/cellframe-node"
    DASHBOARD_PATH="/opt/cellframe-dashboard"
    NODE_CFG="$NODE_PATH/etc/cellframe-node.cfg"
    
    echo "+++ Generating node configuration file..."
    cp $NODE_PATH/share/configs/cellframe-node.cfg.tpl $NODE_PATH/etc/cellframe-node.cfg
    chmod 0666 $NODE_CFG
    sed -i 's|{DEBUG_MODE}|false|' $NODE_CFG
    sed -i 's|{PREFIX}|/opt/cellframe-node|g' $NODE_CFG
    sed -i 's|{AUTO_ONLINE}|true|' $NODE_CFG
    sed -i 's|{SERVER_ENABLED}|true|' $NODE_CFG
    sed -i 's|{SERVER_ADDR}|0.0.0.0|' $NODE_CFG
    sed -i 's|{SERVER_PORT}|8079|' $NODE_CFG
    sed -i 's|{NOTIFY_SRV_ADDR}|127.0.0.1|' $NODE_PATH/etc/cellframe-node.cfg
    sed -i 's|{NOTIFY_SRV_PORT}|8080|' $NODE_PATH/etc/cellframe-node.cfg
    sed -i "s|{DB_DRIVER}|mdbx|" $NODE_PATH/etc/cellframe-node.cfg
    
    echo "+++ Generating network configuration files..."
    for _networks in mileena KelVPN Backbone subzero
    do
        cp $NODE_PATH/share/configs/network/$_networks.cfg.tpl $NODE_PATH/etc/network/$_networks.cfg
        sed -i 's|{NODE_TYPE}|full|' $NODE_PATH/etc/network/$_networks.cfg
    done
    
    systemctl daemon-reload

    echo "+++ Creating symbolic links for executables..."
    for _executables in cellframe-node-cli cellframe-node-tool cellframe-node
	do
		chmod a+x $NODE_PATH/bin/$_executables
		ln -sf $NODE_PATH/bin/$_executables /usr/local/bin/$_executables
	done

    chmod +x $DASHBOARD_PATH/bin/*
    ln -sf $DASHBOARD_PATH/bin/Cellframe-Dashboard /usr/local/bin/Cellframe-Dashboard
    
    mkdir -p $NODE_PATH/var/{run,lib/wallet,lib/global_db,lib/plugins,log}
    mkdir -p $DASHBOARD_PATH/dapps/download && chmod -R 0777 $DASHBOARD_PATH/dapps

    _showmsg
}

pre_upgrade() {
    for _active in cellframe-dashboard cellframe-node
    do
        systemctl is-active --quiet $_active.service && systemctl stop $_active.service && echo "+++ Stopped $_active service..."
    done
}

post_upgrade() {
    systemctl daemon-reload
    for _active in cellframe-dashboard cellframe-node
    do
        systemctl is-enabled --quiet $_active.service && systemctl start $_active.service && echo "+++ Started $_active service..."
    done
    _showmsg
}

pre_remove() {
    for _active in cellframe-dashboard cellframe-node
    do
        systemctl is-active --quiet $_active.service && systemctl stop --quiet $_active.service && echo "+++ Stopped $_active service..."
        systemctl is-enabled --quiet $_active.service && systemctl disable --quiet $_active.service && echo "+++ Disabled $_active service..."
    done
}


post_remove() {
    systemctl daemon-reload
    echo "+++ Removing symbolic links..."
    for _executables in cellframe-node-cli cellframe-node-tool cellframe-node
	do
		unlink /usr/local/bin/$_executables
	done

    unlink /usr/local/bin/Cellframe-Dashboard
}

