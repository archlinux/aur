--- a/src/gallium/auxiliary/gallivm/lp_bld_arit.c	2021-08-19 09:13:58.103801700 -0700
+++ b/src/gallium/auxiliary/gallivm/lp_bld_arit.c	2023-06-13 01:39:39.411415422 -0700
@@ -391,12 +391,6 @@
          return LLVMBuildNot(builder, a, "");
    }

-   if(LLVMIsConstant(a))
-      if (type.floating)
-          return LLVMConstFSub(bld->one, a);
-      else
-          return LLVMConstSub(bld->one, a);
-   else
       if (type.floating)
          return LLVMBuildFSub(builder, bld->one, a, "");
       else
@@ -479,12 +473,6 @@
       }
    }

-   if(LLVMIsConstant(a) && LLVMIsConstant(b))
-      if (type.floating)
-         res = LLVMConstFAdd(a, b);
-      else
-         res = LLVMConstAdd(a, b);
-   else
       if (type.floating)
          res = LLVMBuildFAdd(builder, a, b, "");
       else
@@ -815,12 +803,6 @@
       }
    }

-   if(LLVMIsConstant(a) && LLVMIsConstant(b))
-      if (type.floating)
-         res = LLVMConstFSub(a, b);
-      else
-         res = LLVMConstSub(a, b);
-   else
       if (type.floating)
          res = LLVMBuildFSub(builder, a, b, "");
       else
@@ -978,21 +960,9 @@
    if(type.fixed)
       shift = lp_build_const_int_vec(bld->gallivm, type, type.width/2);
    else
+   {
       shift = NULL;

-   if(LLVMIsConstant(a) && LLVMIsConstant(b)) {
-      if (type.floating)
-         res = LLVMConstFMul(a, b);
-      else
-         res = LLVMConstMul(a, b);
-      if(shift) {
-         if(type.sign)
-            res = LLVMConstAShr(res, shift);
-         else
-            res = LLVMConstLShr(res, shift);
-      }
-   }
-   else {
       if (type.floating)
          res = LLVMBuildFMul(builder, a, b, "");
       else
@@ -1288,15 +1258,6 @@
    if(a == bld->undef || b == bld->undef)
       return bld->undef;

-   if(LLVMIsConstant(a) && LLVMIsConstant(b)) {
-      if (type.floating)
-         return LLVMConstFDiv(a, b);
-      else if (type.sign)
-         return LLVMConstSDiv(a, b);
-      else
-         return LLVMConstUDiv(a, b);
-   }
-
    /* fast rcp is disabled (just uses div), so makes no sense to try that */
    if(FALSE &&
       ((util_get_cpu_caps()->has_sse && type.width == 32 && type.length == 4) ||
@@ -2617,9 +2578,6 @@

    assert(type.floating);

-   if(LLVMIsConstant(a))
-      return LLVMConstFDiv(bld->one, a);
-
    /*
     * We don't use RCPPS because:
     * - it only has 10bits of precision


--- a/src/gallium/auxiliary/gallivm/lp_bld.h	2021-08-19 16:13:58.102801800 +0000
+++ b/src/gallium/auxiliary/gallivm/lp_bld.h	2023-06-13 07:49:27.739718830 +0000
@@ -81,10 +81,6 @@
 #define LLVMInsertBasicBlock ILLEGAL_LLVM_FUNCTION
 #define LLVMCreateBuilder ILLEGAL_LLVM_FUNCTION

-#if LLVM_VERSION_MAJOR >= 8
-#define GALLIVM_HAVE_CORO 1
-#else
 #define GALLIVM_HAVE_CORO 0
-#endif

 #endif /* LP_BLD_H */
