From 9aac8f619941e984bc754719647140c443baf516 Mon Sep 17 00:00:00 2001
From: Carlos Garcia Campos <cgarcia@igalia.com>
Date: Wed, 4 Oct 2023 10:19:28 +0200
Subject: [PATCH] [GTK] Disable DMABuf renderer for NVIDIA proprietary drivers
 https://bugs.webkit.org/show_bug.cgi?id=262607

Reviewed by NOBODY (OOPS!).

Some NVIDIA users are reporting nothing is rendered, so let's just
disable the DMA-BUF renderer until we figure out how to make it work.

* Source/WebKit/UIProcess/gtk/AcceleratedBackingStoreDMABuf.cpp:
(WebKit::isNVIDIA):
(WebKit::AcceleratedBackingStoreDMABuf::rendererBufferMode):
---
 .../gtk/AcceleratedBackingStoreDMABuf.cpp     | 28 +++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/Source/WebKit/UIProcess/gtk/AcceleratedBackingStoreDMABuf.cpp b/Source/WebKit/UIProcess/gtk/AcceleratedBackingStoreDMABuf.cpp
index c5f4a50a..887d0dbd 100644
--- a/Source/WebKit/UIProcess/gtk/AcceleratedBackingStoreDMABuf.cpp
+++ b/Source/WebKit/UIProcess/gtk/AcceleratedBackingStoreDMABuf.cpp
@@ -38,10 +38,12 @@
 #include <WebCore/GLContext.h>
 #include <WebCore/IntRect.h>
 #include <WebCore/PlatformDisplay.h>
+#include <WebCore/PlatformDisplaySurfaceless.h>
 #include <epoxy/egl.h>
 #include <wtf/glib/GUniquePtr.h>
 
 #if USE(GBM)
+#include <WebCore/PlatformDisplayGBM.h>
 #include <drm_fourcc.h>
 #include <gbm.h>
 
@@ -56,6 +58,29 @@ static constexpr uint64_t s_dmabufInvalidModifier = ((1ULL << 56) - 1);
 
 namespace WebKit {
 
+static bool isNVIDIA()
+{
+    const char* forceDMABuf = getenv("WEBKIT_FORCE_DMABUF_RENDERER");
+    if (forceDMABuf && strcmp(forceDMABuf, "0"))
+        return false;
+
+    std::unique_ptr<WebCore::PlatformDisplay> platformDisplay;
+#if USE(GBM)
+    const char* disableGBM = getenv("WEBKIT_DMABUF_RENDERER_DISABLE_GBM");
+    if (!disableGBM || !strcmp(disableGBM, "0")) {
+        if (auto* device = WebCore::PlatformDisplay::sharedDisplay().gbmDevice())
+            platformDisplay = WebCore::PlatformDisplayGBM::create(device);
+    }
+#endif
+    if (!platformDisplay)
+        platformDisplay = WebCore::PlatformDisplaySurfaceless::create();
+
+    WebCore::GLContext::ScopedGLContext glContext(WebCore::GLContext::createOffscreen(platformDisplay ? *platformDisplay : WebCore::PlatformDisplay::sharedDisplay()));
+    if (strstr(reinterpret_cast<const char*>(glGetString(GL_VENDOR)), "NVIDIA"))
+        return true;
+    return false;
+}
+
 OptionSet<DMABufRendererBufferMode> AcceleratedBackingStoreDMABuf::rendererBufferMode()
 {
     static OptionSet<DMABufRendererBufferMode> mode;
@@ -71,6 +96,9 @@ OptionSet<DMABufRendererBufferMode> AcceleratedBackingStoreDMABuf::rendererBuffe
             return;
         }
 
+        if (isNVIDIA())
+            return;
+
         mode.add(DMABufRendererBufferMode::SharedMemory);
 
         const char* forceSHM = getenv("WEBKIT_DMABUF_RENDERER_FORCE_SHM");
-- 
2.43.0

