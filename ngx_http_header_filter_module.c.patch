--- nginx-1.24.0/src/http/ngx_http_header_filter_module.c	2023-04-10 22:45:34.000000000 -0300
+++ nginx-1.24.0_custom/src/http/ngx_http_header_filter_module.c	2023-06-15 13:59:39.000000000 -0300
@@ -46,9 +46,7 @@
 };
 
 
-static u_char ngx_http_server_string[] = "Server: nginx" CRLF;
-static u_char ngx_http_server_full_string[] = "Server: " NGINX_VER CRLF;
-static u_char ngx_http_server_build_string[] = "Server: " NGINX_VER_BUILD CRLF;
+static u_char ngx_http_server_string[] = "Server: ws" CRLF;
 
 
 static ngx_str_t ngx_http_status_lines[] = {
@@ -283,16 +281,9 @@
 
     clcf = ngx_http_get_module_loc_conf(r, ngx_http_core_module);
 
-    if (r->headers_out.server == NULL) {
-        if (clcf->server_tokens == NGX_HTTP_SERVER_TOKENS_ON) {
-            len += sizeof(ngx_http_server_full_string) - 1;
-
-        } else if (clcf->server_tokens == NGX_HTTP_SERVER_TOKENS_BUILD) {
-            len += sizeof(ngx_http_server_build_string) - 1;
-
-        } else {
-            len += sizeof(ngx_http_server_string) - 1;
-        }
+    if ( (r->headers_out.server == NULL) &&
+         (clcf->server_tokens == NGX_HTTP_SERVER_TOKENS_ON) ) {
+        len += sizeof(ngx_http_server_string) - 1;
     }
 
     if (r->headers_out.date == NULL) {
@@ -452,19 +443,10 @@
     }
     *b->last++ = CR; *b->last++ = LF;
 
-    if (r->headers_out.server == NULL) {
-        if (clcf->server_tokens == NGX_HTTP_SERVER_TOKENS_ON) {
-            p = ngx_http_server_full_string;
-            len = sizeof(ngx_http_server_full_string) - 1;
-
-        } else if (clcf->server_tokens == NGX_HTTP_SERVER_TOKENS_BUILD) {
-            p = ngx_http_server_build_string;
-            len = sizeof(ngx_http_server_build_string) - 1;
-
-        } else {
-            p = ngx_http_server_string;
-            len = sizeof(ngx_http_server_string) - 1;
-        }
+    if ( (r->headers_out.server == NULL) &&
+         (clcf->server_tokens == NGX_HTTP_SERVER_TOKENS_ON) ) {
+        p = ngx_http_server_string;
+        len = sizeof(ngx_http_server_string) - 1;
 
         b->last = ngx_cpymem(b->last, p, len);
     }
