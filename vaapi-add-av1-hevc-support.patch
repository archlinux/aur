diff --git a/media/gpu/vaapi/vaapi_video_decode_accelerator.cc b/media/gpu/vaapi/vaapi_video_decode_accelerator.cc
index dd22c7c..dd76a98 100644
--- a/media/gpu/vaapi/vaapi_video_decode_accelerator.cc
+++ b/media/gpu/vaapi/vaapi_video_decode_accelerator.cc
@@ -41,6 +41,8 @@
 #include "media/gpu/vaapi/vaapi_utils.h"
 #include "media/gpu/vaapi/vp8_vaapi_video_decoder_delegate.h"
 #include "media/gpu/vaapi/vp9_vaapi_video_decoder_delegate.h"
+#include "media/gpu/vaapi/h265_vaapi_video_decoder_delegate.h"
+#include "media/gpu/vaapi/av1_vaapi_video_decoder_delegate.h"
 #include "media/gpu/vp8_decoder.h"
 #include "media/gpu/vp9_decoder.h"
 #include "media/video/picture.h"
@@ -230,6 +232,18 @@ bool VaapiVideoDecodeAccelerator::Initialize(const Config& config,
     decoder_delegate_ = accelerator.get();
     decoder_.reset(new VP9Decoder(std::move(accelerator), profile,
                                   config.container_color_space));
+  } else if (profile >= AV1PROFILE_MIN && profile <= AV1PROFILE_MAX) {
+    auto accelerator =
+        std::make_unique<AV1VaapiVideoDecoderDelegate>(this, vaapi_wrapper_);
+    decoder_delegate_ = accelerator.get();
+    decoder_.reset(new AV1Decoder(std::move(accelerator), profile,
+                                  config.container_color_space));
+  } else if (profile >= H265PROFILE_MIN && profile <= H265PROFILE_MAX) {
+    auto accelerator =
+        std::make_unique<H265VaapiVideoDecoderDelegate>(this, vaapi_wrapper_);
+    decoder_delegate_ = accelerator.get();
+    decoder_.reset(new H265Decoder(std::move(accelerator), profile,
+                                  config.container_color_space));
   } else {
     VLOGF(1) << "Unsupported profile " << GetProfileName(profile);
     return false;
@@ -1201,8 +1215,7 @@ VaapiVideoDecodeAccelerator::GetSupportedProfiles() {
   // Filter them out.
   base::EraseIf(profiles, [](const auto& profile) {
     VideoCodec codec = VideoCodecProfileToVideoCodec(profile.profile);
-    return profile.profile == VP9PROFILE_PROFILE2 ||
-           codec == VideoCodec::kAV1 || codec == VideoCodec::kHEVC;
+    return profile.profile == VP9PROFILE_PROFILE2;
   });
   return profiles;
 }
