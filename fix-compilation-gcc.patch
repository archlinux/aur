From 82c2a3da9f453c3f9debc1e531d162e530405070 Mon Sep 17 00:00:00 2001
From: Liam <byteslice@airmail.cc>
Date: Mon, 6 Feb 2023 13:14:27 -0500
Subject: [PATCH] kernel: fix compilation with older gcc

---
 src/core/hle/kernel/k_capabilities.cpp | 8 ++++----
 src/core/hle/kernel/physical_core.h    | 1 +
 2 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/src/core/hle/kernel/k_capabilities.cpp b/src/core/hle/kernel/k_capabilities.cpp
index 64f1d7371b18..2907cc6e378b 100644
--- a/src/core/hle/kernel/k_capabilities.cpp
+++ b/src/core/hle/kernel/k_capabilities.cpp
@@ -203,23 +203,23 @@ Result KCapabilities::ProcessMapRegionCapability(const u32 cap, F f) {
 
 Result KCapabilities::MapRegion_(const u32 cap, KPageTable* page_table) {
     // Map each region into the process's page table.
-    R_RETURN(ProcessMapRegionCapability(
+    return ProcessMapRegionCapability(
         cap, [](KMemoryRegionType region_type, KMemoryPermission perm) -> Result {
             // R_RETURN(page_table->MapRegion(region_type, perm));
             UNIMPLEMENTED();
             R_SUCCEED();
-        }));
+        });
 }
 
 Result KCapabilities::CheckMapRegion(KernelCore& kernel, const u32 cap) {
     // Check that each region has a physical backing store.
-    R_RETURN(ProcessMapRegionCapability(
+    return ProcessMapRegionCapability(
         cap, [&](KMemoryRegionType region_type, KMemoryPermission perm) -> Result {
             R_UNLESS(kernel.MemoryLayout().GetPhysicalMemoryRegionTree().FindFirstDerived(
                          region_type) != nullptr,
                      ResultOutOfRange);
             R_SUCCEED();
-        }));
+        });
 }
 
 Result KCapabilities::SetInterruptPairCapability(const u32 cap) {
diff --git a/src/core/hle/kernel/physical_core.h b/src/core/hle/kernel/physical_core.h
index fb2ba4c6b51a..fb8e7933ed79 100644
--- a/src/core/hle/kernel/physical_core.h
+++ b/src/core/hle/kernel/physical_core.h
@@ -3,6 +3,7 @@
 
 #pragma once
 
+#include <condition_variable>
 #include <cstddef>
 #include <memory>
 #include <mutex>
