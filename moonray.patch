diff --git a/arras/arras4_core/arras4_client/lib/log_client/LogClient.cc b/arras/arras4_core/arras4_client/lib/log_client/LogClient.cc
index b1aa0c7..90d171b 100644
--- a/arras/arras4_core/arras4_client/lib/log_client/LogClient.cc
+++ b/arras/arras4_core/arras4_client/lib/log_client/LogClient.cc
@@ -372,7 +372,7 @@ LogClient::objectToLogRecords(std::unique_ptr<api::Object> obj)
             if (content.isArray()) {

                 // For each object in the array make a log record
-                for (Json::Value::iterator i = content.begin(); i != content.end(); ++i) {
+                for (Json::Value::const_iterator i = content.begin(); i != content.end(); ++i) {

                     const api::Object& item = *i;
                     if (objectIsLogRecord(item)) {
diff --git a/arras/arras4_core/arras4_core_impl/lib/shared_impl/ThreadsafeQueue.h b/arras/arras4_core/arras4_core_impl/lib/shared_impl/ThreadsafeQueue.h
index 39cdc64..24878dd 100644
--- a/arras/arras4_core/arras4_core_impl/lib/shared_impl/ThreadsafeQueue.h
+++ b/arras/arras4_core/arras4_core_impl/lib/shared_impl/ThreadsafeQueue.h
@@ -7,6 +7,7 @@
 #include <mutex>
 #include <condition_variable>
 #include <queue>
+#include <string>

 namespace arras4 {
     namespace impl {
diff --git a/arras/arras4_core/arras4_core_impl/lib/computation_impl/CMakeLists.txt b/arras/arras4_core/arras4_core_impl/lib/computation_impl/CMakeLists.txt
index ffeab6f..e01835e 100644
--- a/arras/arras4_core/arras4_core_impl/lib/computation_impl/CMakeLists.txt
+++ b/arras/arras4_core/arras4_core_impl/lib/computation_impl/CMakeLists.txt
@@ -37,6 +37,7 @@ target_link_libraries(${LibName}
         ${PROJECT_NAME}::chunking
         ${PROJECT_NAME}::core_messages
         ${PROJECT_NAME}::network
+	jsoncpp
         dl
 )

diff --git a/arras/arras4_core/arras4_network/lib/httpserver/HttpServer.cc b/arras/arras4_core/arras4_network/lib/httpserver/HttpServer.cc
index 44e4144..52b505e 100644
--- a/arras/arras4_core/arras4_network/lib/httpserver/HttpServer.cc
+++ b/arras/arras4_core/arras4_network/lib/httpserver/HttpServer.cc
@@ -318,7 +318,7 @@ HttpServer::HttpServer(unsigned short aListenPort,
                           MHD_USE_EPOLL_TURBO);

     ARRAS_SOCKET socket = createListenSocket(mPort);
-
+/*
     if (!certData.empty() && !keyData.empty()) {
         flags |= MHD_USE_SSL;

@@ -380,7 +380,7 @@ HttpServer::HttpServer(unsigned short aListenPort,
                     );

     }
-
+*/
     if (!mDaemon) {
         std::stringstream ss;
         ss << "Could not listen on port " << mPort;
@@ -418,10 +418,10 @@ void
 HttpServer::_prepare(HttpServerRequest& aReq, MHD_Connection* aConn)
 {
     // headers...
-    MHD_get_connection_values(aConn, MHD_HEADER_KIND, key_value_iterator, &aReq);
+    //MHD_get_connection_values(aConn, MHD_HEADER_KIND, key_value_iterator, &aReq);

     // query params...
-    MHD_get_connection_values(aConn, MHD_GET_ARGUMENT_KIND, key_value_iterator, &aReq);
+    //MHD_get_connection_values(aConn, MHD_GET_ARGUMENT_KIND, key_value_iterator, &aReq);
 }

 }
diff --git a/arras/arras4_core/arras4_core_impl/cmd/execComp/CMakeLists.txt b/arras/arras4_core/arras4_core_impl/cmd/execComp/CMakeLists.txt
index 03f56c5..da2d1f1 100644
--- a/arras/arras4_core/arras4_core_impl/cmd/execComp/CMakeLists.txt
+++ b/arras/arras4_core/arras4_core_impl/cmd/execComp/CMakeLists.txt
@@ -26,6 +26,7 @@ target_link_libraries(${CmdName}
         Boost::filesystem
         Libatomic::Libatomic
         pthread
+    jsoncpp
 )

 # prevent use of crash reporter since it isn't yet supported
diff --git a/arras/arras4_core/arras4_core_impl/cmd/msgInfo/main.cc b/arras/arras4_core/arras4_core_impl/cmd/msgInfo/main.cc
index f505fca..b25c946 100644
--- a/arras/arras4_core/arras4_core_impl/cmd/msgInfo/main.cc
+++ b/arras/arras4_core/arras4_core_impl/cmd/msgInfo/main.cc
@@ -69,7 +69,7 @@ void readMessageHeader(const std::string& filepath,
     // add additional non-metadata info
     obj["_classId"] = classId.toString();
     obj["_version"] = version;
-    obj["_serialSize"] = size;
+    obj["_serialSize"] = (Json::Int64) size;
 }

 void showInfo(const std::string& filepath,bool full, const std::string& prefix="")
diff --git a/arras/arras4_core/arras4_log/lib/arras4_log/SyslogLogger.cc b/arras/arras4_core/arras4_log/lib/arras4_log/SyslogLogger.cc
index 3f5a648..8b59e0f 100644
--- a/arras/arras4_core/arras4_log/lib/arras4_log/SyslogLogger.cc
+++ b/arras/arras4_core/arras4_log/lib/arras4_log/SyslogLogger.cc
@@ -33,7 +33,7 @@ static int sPriorities[] = {

 void SyslogLogger::log(Level level, const char *message)
 {
-    syslog(sPriorities[level], message);
+    syslog(sPriorities[level], "%s", message);
 }

 }
diff --git a/arras/arras4_core/arras4_test/cmd/testClient/Data.cc b/arras/arras4_core/arras4_test/cmd/testClient/Data.cc
index a8c6fac..40df394 100644
--- a/arras/arras4_core/arras4_test/cmd/testClient/Data.cc
+++ b/arras/arras4_core/arras4_test/cmd/testClient/Data.cc
@@ -231,8 +231,8 @@ getSessions(
                 std::string nodeId = assignmentJson["nodeId"].asString();
                 // most of the node information is redundant
                 const Json::Value computations = assignmentJson["config"]["computations"];
-                for (Json::Value::iterator iter = computations.begin(); iter != computations.end(); ++iter) {
-                    Json::ValueIterator::reference computationJson = *iter;
+                for (Json::Value::const_iterator iter = computations.begin(); iter != computations.end(); ++iter) {
+                    Json::ValueConstIterator::reference computationJson = *iter;
                     Computation computation;
                     computation.mId = iter.key().asString();
                     if (computation.mId == "(client)") continue;
diff --git a/arras/arras4_core/arras4_test/cmd/testClient/main.cc b/arras/arras4_core/arras4_test/cmd/testClient/main.cc
index 5e829c2..7d8f802 100644
--- a/arras/arras4_core/arras4_test/cmd/testClient/main.cc
+++ b/arras/arras4_core/arras4_test/cmd/testClient/main.cc
@@ -117,7 +117,7 @@ subset(const Json::Value& aSubset, const Json::Value& aSuperset,
       case Json::objectValue:
         {
             unsigned int index = 0;
-            Json::ValueIterator iter = aSubset.begin();
+            Json::ValueConstIterator iter = aSubset.begin();
             while (iter != aSubset.end()) {
                 const char* memberName = iter.memberName();
                 std::string name = aVarName + "." + iter.memberName();

diff --git a/arras/distributed/arras4_node/cmd/node/ArrasNode.cc b/arras/distributed/arras4_node/cmd/node/ArrasNode.cc
index b545622..e4cbd09 100644
--- a/arras/distributed/arras4_node/cmd/node/ArrasNode.cc
+++ b/arras/distributed/arras4_node/cmd/node/ArrasNode.cc
@@ -685,7 +685,7 @@ ArrasNode::updateTags(api::ObjectConstRef tags)

         // verify tags
         api::Object current = mNodeInfo["tags"];
-        for (api::ObjectIterator it = tags.begin();
+        for (auto it = tags.begin();
              it != tags.end(); ++it) {
             current[it.memberName()] = *it;
         }
@@ -716,7 +716,7 @@ ArrasNode::deleteTags(api::ObjectConstRef tags)

         // verify tags
         api::Object current = mNodeInfo["tags"];
-        for (api::ObjectIterator it = tags.begin();
+        for (auto it = tags.begin();
              it != tags.end(); ++it) {
             if ((*it).isString() && current.isMember((*it).asString())) {
                 current.removeMember((*it).asString());
diff --git a/arras/distributed/arras4_node/lib/session/Computation.h b/arras/distributed/arras4_node/lib/session/Computation.h
index cfe7e21..ba9e249 100644
--- a/arras/distributed/arras4_node/lib/session/Computation.h
+++ b/arras/distributed/arras4_node/lib/session/Computation.h
@@ -62,7 +62,7 @@ private:
     impl::ExecutorHeartbeat::ConstPtr mLastHeartbeat;
     float mCpuUsage5SecsMax{0};
     float mCpuUsage60SecsMax{0};
-    unsigned long long mMemoryUsageBytesMax{0};
+    unsigned long mMemoryUsageBytesMax{0};
     long mLastSentMessagesSecs{0};
     int mLastSentMessagesMicroSecs{0};
     long mLastReceivedMessagesSecs{0};
diff --git a/moonray/hydra/hdMoonray/src/RendererPlugin.cc b/moonray/hydra/hdMoonray/src/RendererPlugin.cc
index b0e3310..6f1019a 100644
--- a/moonray/hydra/hdMoonray/src/RendererPlugin.cc
+++ b/moonray/hydra/hdMoonray/src/RendererPlugin.cc
@@ -25,7 +25,7 @@ public:
         delete renderDelegate;
     }

-    bool IsSupported() const override {
+    bool IsSupported(bool gpuEnabled = true) const override {
         return true;
     }

diff --git a/moonray/moonray/lib/deepfile/DcxImageFormat.h b/moonray/moonray/lib/deepfile/DcxImageFormat.h
index 5aaf284..f9fbdee 100644
--- a/moonray/moonray/lib/deepfile/DcxImageFormat.h
+++ b/moonray/moonray/lib/deepfile/DcxImageFormat.h
@@ -7,7 +7,7 @@
 #include "DcxAPI.h"

 #include <OpenEXR/ImfHeader.h>
-#include <OpenEXR/ImathMatrix.h>
+#include <Imath/ImathMatrix.h>

 #include <string>
 #include <iostream>
diff --git a/moonray/moonray/lib/deepfile/DcxPixel.h b/moonray/moonray/lib/deepfile/DcxPixel.h
index 6d4d4a7..5e972a8 100644
--- a/moonray/moonray/lib/deepfile/DcxPixel.h
+++ b/moonray/moonray/lib/deepfile/DcxPixel.h
@@ -17,7 +17,7 @@
 //   this is coming from OpenEXR/half.h...
 #   pragma warning(disable:1572)
 #endif
-#include <OpenEXR/half.h>  // For Pixelh
+#include <Imath/half.h>  // For Pixelh

 #include <string.h> // for memset in some compilers
 #include <iostream>
diff --git a/moonray/moonray/lib/rendering/rt/gpu/GPUPrimitive.h b/moonray/moonray/lib/rendering/rt/gpu/GPUPrimitive.h
index 18fa3c8..2e99fc0 100644
--- a/moonray/moonray/lib/rendering/rt/gpu/GPUPrimitive.h
+++ b/moonray/moonray/lib/rendering/rt/gpu/GPUPrimitive.h
@@ -8,6 +8,7 @@

 #include <cuda.h>
 #include <vector>
+#include <array>

 namespace moonray {
 namespace rt {
diff --git a/moonray/moonray/lib/rendering/shading/bsdf/hair/BsdfHairOneSampler.h b/moonray/moonray/lib/rendering/shading/bsdf/hair/BsdfHairOneSampler.h
index e5fc2aa..ba6c0b6 100644
--- a/moonray/moonray/lib/rendering/shading/bsdf/hair/BsdfHairOneSampler.h
+++ b/moonray/moonray/lib/rendering/shading/bsdf/hair/BsdfHairOneSampler.h
@@ -14,6 +14,7 @@
 #include <scene_rdl2/common/math/Color.h>
 #include <scene_rdl2/common/math/Vec2.h>
 #include <scene_rdl2/common/math/Vec3.h>
+#include <array>

 namespace moonray {
 namespace shading {
diff --git a/moonray/moonray/lib/rendering/texturing/sampler/TextureTLState.h b/moonray/moonray/lib/rendering/texturing/sampler/TextureTLState.h
index 09955c2..9b403d1 100644
--- a/moonray/moonray/lib/rendering/texturing/sampler/TextureTLState.h
+++ b/moonray/moonray/lib/rendering/texturing/sampler/TextureTLState.h
@@ -7,6 +7,7 @@
 #include <moonray/rendering/mcrt_common/ThreadLocalState.h>

 //  OiiO includes for access to texture system.
+#include <Imath/ImathVec.h>  // OIIO uses the Vector classes from Imath but defines its own version if not already defined.
 #include <OpenImageIO/version.h>
 #include <OpenImageIO/texture.h>

diff --git a/moonray/moonray/tests/lib/common/mcrt_util/test_aligned_element_array.cc b/moonray/moonray/tests/lib/common/mcrt_util/test_aligned_element_array.cc
index e9ccd7e..3768e23 100644
--- a/moonray/moonray/tests/lib/common/mcrt_util/test_aligned_element_array.cc
+++ b/moonray/moonray/tests/lib/common/mcrt_util/test_aligned_element_array.cc
@@ -6,6 +6,7 @@
 #include <moonray/common/mcrt_util/AlignedElementArray.h>

 #include <numeric>
+#include <cstdint>

 CPPUNIT_TEST_SUITE_REGISTRATION(TestAlignedElementArray);

diff --git a/moonray/moonray_arras/mcrt_computation/lib/engine/mcrt/McrtUpdate.h b/moonray/moonray_arras/mcrt_computation/lib/engine/mcrt/McrtUpdate.h
index e229344..a5b3567 100644
--- a/moonray/moonray_arras/mcrt_computation/lib/engine/mcrt/McrtUpdate.h
+++ b/moonray/moonray_arras/mcrt_computation/lib/engine/mcrt/McrtUpdate.h
@@ -8,6 +8,7 @@
 #include <message_api/Message.h>
 #include <message_api/messageapi_names.h>
 #include <message_api/Object.h>
+#include <functional>

 namespace mcrt_computation {

diff --git a/moonray/moonray_arras/mcrt_dataio/lib/engine/mcrt/McrtControl.h b/moonray/moonray_arras/mcrt_dataio/lib/engine/mcrt/McrtControl.h
index 9ca5d92..6aa67a3 100644
--- a/moonray/moonray_arras/mcrt_dataio/lib/engine/mcrt/McrtControl.h
+++ b/moonray/moonray_arras/mcrt_dataio/lib/engine/mcrt/McrtControl.h
@@ -16,6 +16,7 @@

 #include <functional>
 #include <iostream>
+#include <cstdint>

 namespace mcrt_dataio {

diff --git a/moonray/moonray_arras/mcrt_dataio/lib/engine/merger/FbMsgUtil.cc b/moonray/moonray_arras/mcrt_dataio/lib/engine/merger/FbMsgUtil.cc
index 532f5a0..f0b455d 100644
--- a/moonray/moonray_arras/mcrt_dataio/lib/engine/merger/FbMsgUtil.cc
+++ b/moonray/moonray_arras/mcrt_dataio/lib/engine/merger/FbMsgUtil.cc
@@ -4,6 +4,7 @@

 #include <iomanip>
 #include <sstream>
+#include <cstdint>

 namespace mcrt_dataio {

diff --git a/moonray/moonray_arras/mcrt_dataio/lib/share/codec/InfoCodec.cc b/moonray/moonray_arras/mcrt_dataio/lib/share/codec/InfoCodec.cc
index e9a2e48..6b2853e 100644
--- a/moonray/moonray_arras/mcrt_dataio/lib/share/codec/InfoCodec.cc
+++ b/moonray/moonray_arras/mcrt_dataio/lib/share/codec/InfoCodec.cc
@@ -301,13 +301,13 @@ InfoCodec::setUInt(Key &key, const unsigned int setVal, unsigned int *setTarget)
 void
 InfoCodec::setInt64(Key &key, const int64_t setVal, int64_t *setTarget) // MTsafe
 {
-    mImpl->set<long long>(key, (long long)setVal, (long long *)setTarget);
+    mImpl->set<long>(key, (long)setVal, (long *)setTarget);
 }

 void
 InfoCodec::setUInt64(Key &key, const uint64_t setVal, uint64_t *setTarget) // MTsafe
 {
-    mImpl->set<unsigned long long>(key, (unsigned long long)setVal, (unsigned long long *)setTarget);
+    mImpl->set<unsigned long>(key, (unsigned long)setVal, (unsigned long *)setTarget);
 }

 void
diff --git a/moonray/moonray_arras/mcrt_dataio/lib/share/codec/InfoRec.cc b/moonray/moonray_arras/mcrt_dataio/lib/share/codec/InfoRec.cc
index 7af5f66..36bc957 100644
--- a/moonray/moonray_arras/mcrt_dataio/lib/share/codec/InfoRec.cc
+++ b/moonray/moonray_arras/mcrt_dataio/lib/share/codec/InfoRec.cc
@@ -81,7 +81,7 @@ InfoRecGlobal::setDispatch(const std::string& hostName,
 {
     mArray["dp"]["name"] = hostName;
     mArray["dp"]["cpu"] = cpuTotal;
-    mArray["dp"]["mem"] = static_cast<unsigned long long>(memTotal);
+    mArray["dp"]["mem"] = static_cast<unsigned long>(memTotal);
 }

 bool
@@ -101,7 +101,7 @@ InfoRecGlobal::setMcrt(const int machineId,
     std::string mIdStr = mIdStrGen(machineId);
     mArray["mc"][mIdStr]["name"] = hostName;
     mArray["mc"][mIdStr]["cpu"] = cpuTotal;
-    mArray["mc"][mIdStr]["mem"] = static_cast<unsigned long long>(memTotal);
+    mArray["mc"][mIdStr]["mem"] = static_cast<unsigned long>(memTotal);
 }

 size_t
@@ -124,7 +124,7 @@ InfoRecGlobal::setMerge(const std::string& hostName,
 {
     mArray["mg"]["name"] = hostName;
     mArray["mg"]["cpu"] = cpuTotal;
-    mArray["mg"]["mem"] = static_cast<unsigned long long>(memTotal);
+    mArray["mg"]["mem"] = static_cast<unsigned long>(memTotal);
 }

 std::string
@@ -567,7 +567,7 @@ void
 InfoRecItem::setTimeStamp()
 {
     mTimeStamp = MiscUtil::getCurrentMicroSec();
-    mArray["time"] = (unsigned long long)(mTimeStamp);
+    mArray["time"] = (unsigned long)(mTimeStamp);
 }

 int
diff --git a/moonray/moonray_arras/mcrt_dataio/lib/share/util/FpsTracker.h b/moonray/moonray_arras/mcrt_dataio/lib/share/util/FpsTracker.h
index db4d5d6..5ff8b7c 100644
--- a/moonray/moonray_arras/mcrt_dataio/lib/share/util/FpsTracker.h
+++ b/moonray/moonray_arras/mcrt_dataio/lib/share/util/FpsTracker.h
@@ -4,6 +4,7 @@

 #include <queue>
 #include <string>
+#include <cstdint>

 namespace mcrt_dataio {

diff --git a/moonray/moonshine/lib/common/noise/Worley.cc b/moonray/moonshine/lib/common/noise/Worley.cc
index 248667a..7954f49 100644
--- a/moonray/moonshine/lib/common/noise/Worley.cc
+++ b/moonray/moonshine/lib/common/noise/Worley.cc
@@ -6,6 +6,7 @@
 #include "Worley.h"
 #include <scene_rdl2/render/util/Random.h>
 #include <scene_rdl2/common/math/ReferenceFrame.h>
+#include <array>

 namespace moonshine {
 namespace noise {
diff --git a/moonray/moonshine/lib/common/noise/Worley.h b/moonray/moonshine/lib/common/noise/Worley.h
index 59997bc..75d3955 100644
--- a/moonray/moonshine/lib/common/noise/Worley.h
+++ b/moonray/moonshine/lib/common/noise/Worley.h
@@ -11,6 +11,7 @@
 #include "Noise_ispc_stubs.h"
 #include "Worley_ispc_stubs.h"
 #include <scene_rdl2/common/math/Color.h>
+#include <array>

 namespace moonshine {
 namespace noise {
diff --git a/moonray/scene_rdl2/lib/common/platform/Platform.h b/moonray/scene_rdl2/lib/common/platform/Platform.h
index 6baca9a..9d9f12a 100644
--- a/moonray/scene_rdl2/lib/common/platform/Platform.h
+++ b/moonray/scene_rdl2/lib/common/platform/Platform.h
@@ -13,6 +13,7 @@
 #include <iostream>
 #include <sstream>
 #include <string>
+#include <cstdint>

 // Intel: begin *****
 /*
