# The port the application listens on.
# Defaults to 3000.
# OFFEN_SERVER_PORT="3000"

# If set to true the application will assume it is running behind a reverse proxy. This means it does not add caching or security related headers to any response. Logging information about requests to stdout is also disabled.
# Defaults to false.
# OFFEN_SERVER_REVERSEPROXY="false"

# In case you own a SSL certificate that is valid for the domain you are planning to serve your Offen Fair Web Analytics instance from, you can pass the location of the certificate file using this variable.
# It also requires OFFEN_SERVER_SSLKEY to be set.
# OFFEN_SERVER_SSLCERTIFICATE="/var/lib/offen/fullchain.pem"

# In case you own a SSL certificate that is valid for the domain you are planning to serve your Offen Fair Web Analytics instance from, you can pass the location of the key file using this variable.
# It also requires OFFEN_SERVER_SSLCERTIFICATE to be set.
# OFFEN_SERVER_SSLKEY="/var/lib/offen/privkey.pem"

# In case you want Offen Fair Web Analytics to automatically request a free SSL certificate from LetsEncrypt you can use this parameter and assign a comma separated list of supported domain names you are planning to serve it from.
# This will have the application automatically handle certificate issuing and renewal.
# Note: Using this feature will invalidate any port value that has been configured and will make Offen Fair Web Analytics listen to both port 80 and 443.
# In such a setup, it is important that both ports are available to the public internet.
# OFFEN_SERVER_AUTOTLS="offen.mydomain.org,offen.otherdomain.org"

# When using the AutoTLS feature, this sets the location where Offen Fair Web Analytics will be caching certificates.
# Defaults to /var/www/.cache on Linux and MacOS, %Temp%\offen.db on Windows.
# Note: It is important that this value points to a persistent, non-ephemeral location as otherwise each request would issue a new certificate and your deployment will be rate limited by Let’s Encrypt soon.
# OFFEN_SERVER_CERTFICATECACHE="/var/lib/offen/certcache"

# In case you are using the AutoTLS feature, this setting can be used to pass an email to Let’s Encrypt that will then be associated with the issued certificate.
# This allows Let’s Encrypt to email you on certificate expiry or other possible issues with the certificate.
# OFFEN_SERVER_LETSENCRYPTEMAIL="mail@example.tld"

# The SQL dialect to use. Supported options are sqlite3, postgres or mysql.
# Defaults to sqlite3.
# OFFEN_DATABASE_DIALECT="sqlite3"

# The connection string or location of the database.
# For sqlite3 this will be the location of the database file, for other dialects, it will be the URL the database is located at, including the credentials needed to access it.
# When using mysql make sure you append a ?parseTime=true parameter to your connection string:
#
# OFFEN_DATABASE_CONNECTIONSTRING=user:pass@tcp(localhost:3306)/offen?parseTime=true
#
# When using postgres and you are using a local database (or a Docker network) you might need to append a ?sslmode=disable parameter to your connection string:
#
# OFFEN_DATABASE_CONNECTIONSTRING=postgres://user:pass@localhost:5432/offen?sslmode=disable
#
# Defaults to /var/opt/offen/offen.db on Linux and MacOS, %Temp%\offen.db on Windows.
# OFFEN_DATABASE_CONNECTIONSTRING="/var/lib/offen/offen.db"

# When running in a setup where you start the Offen Fair Web Analytics server together with your database, you might run into race scenarios where Offen Fair Web Analytics tries to connect to your database before it’s ready to accept connections (e.g. docker-compose with MySQL).
# If needed, you can use this setting to tell it to retry connecting to the database after sleeping for a few seconds. This mechanism uses an exponential backoff algorithm, so if you specify a large number, the intervals might become big.
# As this is more of a workaround, the default behavior is not to retry.
# OFFEN_DATABASE_CONNECTIONRETRIES="0"

# The SMTP user name used when sending transactional email.
# OFFEN_SMTP_USER="user"

# The SMTP user name used when sending transactional email.
# OFFEN_SMTP_PASSWORD="changeme"

# The SMTP hostname used when sending transactional email.
# OFFEN_SMTP_HOST="mail.example.tld"

# The SMTP port used when sending transactional email.
# Default value 587.
# OFFEN_SMTP_PORT="587"

# The From address used when sending transactional email.
# Default value no-reply@offen.dev.
# OFFEN_SMTP_SENDER="no-reply@offen.dev"

# A Base64 encoded secret that is used for signing cookies and validating URL tokens.
# Ideally, it is of 16 bytes length. If this is not set, a random value will be created at application startup.
# This would mean that Offen Fair Web Analytics can serve requests, but an application restart would invalidate all existing sessions and all pending invitation/password reset emails.
# If you do not want this behavior, populate this value, which is what we recommend.
#
# The offen command has a secret subcommand you can use to generate such a value:
#
# $ offen secret
# INFO[0000] Created 16 bytes secret                       secret="NYOBGx2wF3CdrTva16m6BQ=="
#
# Please do not use the above example value when deploying your application.
# OFFEN_SECRET=

# The language the application will use when displaying user facing text.
# Right now, en (English), de (German), fr (French), es (Spanish), pt (Portuguese) and vi (Vietnamese) are supported.
# Defaults to en.
# OFFEN_APP_LOCALE="en"

# Specifies the application’s log level. Possible values are debug, info, warn, error.
# If you use a level higher than info, access logging - which is happening at info level - will be suppressed.
# Defaults to info.
# OFFEN_APP_LOGLEVEL="info"

# In case you want to run Offen Fair Web Analytics as a horizontally scaling service, you can set this value to false.
# This will disable all cron jobs and similar that handle automated database migration and event expiration.
# Defaults to true.
# OFFEN_APP_SINGLENODE="true"

# If you want to collect usage statistics for your installation using Offen Fair Web Analytics, you can use this parameter to specify an Account ID known to your Offen Fair Web Analytics instance that will be used for collecting data.
# OFFEN_APP_ROOTACCOUNT=""

# By default, Offen Fair Web Analytics retains data for 6 months (186 days) and deletes all data that is older than this threshold.
# In case you wish to expire data even earlier, use this setting to define a shorter retention period.
# Possible values are: 6months, 12weeks, 6weeks, 30days, 7days.
# Defaults to 6months.
# Note: When you configure this value to be lower than what was used before, the application will delete all events older than the new value on startup, and there will be no way to recover this data.
# OFFEN_APP_RETENTION="6months"
