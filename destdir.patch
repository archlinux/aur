--- amr-amrfinder_v3.11.20.orig/Makefile	2023-09-06 22:49:21.000000000 +0530
+++ amr-amrfinder_v3.11.20.new/Makefile	2023-09-21 00:23:04.406125302 +0530
@@ -37,7 +37,7 @@
 # This is a little convoluted because I broke things and don't want
 # to change two different ways of defining the paths. This could
 # be simplified in a later release
-PREFIX ?= /usr/local
+PREFIX ?= /usr
 ifneq '$(INSTALL_DIR)' ''
 	bindir=$(INSTALL_DIR)
 endif
@@ -73,12 +73,12 @@
   CPPFLAGS = -std=gnu++17 -pthread --signed-char -falign-jumps -fno-math-errno -O3 
 else
   # set x86_x64 CFLAGS
-  CPPFLAGS = -std=gnu++17 -pthread -malign-double -fno-math-errno -O3
+  CPPFLAGS = -std=gnu++17 -pthread -malign-double -fno-math-errno -O2
 endif
 # was: -std=gnu++14 
 
 CXX=g++
-COMPILE.cpp= $(CXX) $(CPPFLAGS) $(SVNREV) $(DBDIR) $(TEST_UPDATE_DB) -c 
+COMPILE.cpp= $(CXX) $(CPPFLAGS) $(LDFLAGS) $(SVNREV) $(DBDIR) $(TEST_UPDATE_DB) -c 
 
 
 .PHONY: all clean install release 
@@ -99,12 +99,12 @@
 amr_report.o:	common.hpp common.inc gff.hpp alignment.hpp
 amr_reportOBJS=amr_report.o common.o gff.o alignment.o
 amr_report:	$(amr_reportOBJS)
-	$(CXX) -o $@ $(amr_reportOBJS)
+	$(CXX) $(LDFLAGS) -o $@ $(amr_reportOBJS)
 
 amrfinder.o:  common.hpp common.inc gff.hpp
 amrfinderOBJS=amrfinder.o common.o gff.o tsv.o
 amrfinder:	$(amrfinderOBJS)
-	$(CXX) -o $@ $(amrfinderOBJS) -pthread $(DBDIR)
+	$(CXX) $(LDFLAGS) -o $@ $(amrfinderOBJS) -pthread $(DBDIR)
 
 amrfinder_update.o:  common.hpp common.inc 
 amrfinder_updateOBJS=amrfinder_update.o common.o curl_easy.o
@@ -113,37 +113,37 @@
 	then  \
 		touch amrfinder_update.cpp ;\
 	fi # make sure the next make command rebuilds amrfinder_update
-	$(CXX) -o $@ $(amrfinder_updateOBJS) -lcurl 
+	$(CXX) $(LDFLAGS) -o $@ $(amrfinder_updateOBJS) -lcurl 
 
 amrfinder_index.o:  common.hpp common.inc 
 amrfinder_indexOBJS=amrfinder_index.o common.o
 amrfinder_index:      $(amrfinder_indexOBJS) 
-	$(CXX) -o $@ $(amrfinder_indexOBJS) 
+	$(CXX) $(LDFLAGS) -o $@ $(amrfinder_indexOBJS) 
 
 fasta_check.o:	common.hpp common.inc 
 fasta_checkOBJS=fasta_check.o common.o 
 fasta_check:	$(fasta_checkOBJS)
-	$(CXX) -o $@ $(fasta_checkOBJS)
+	$(CXX) $(LDFLAGS) -o $@ $(fasta_checkOBJS)
 
 fasta_extract.o:	common.hpp common.inc
 fasta_extractOBJS=fasta_extract.o common.o
 fasta_extract:	$(fasta_extractOBJS)
-	$(CXX) -o $@ $(fasta_extractOBJS)
+	$(CXX) $(LDFLAGS) -o $@ $(fasta_extractOBJS)
 
 fasta2parts.o:	common.hpp common.inc
 fasta2partsOBJS=fasta2parts.o common.o
 fasta2parts:	$(fasta2partsOBJS)
-	$(CXX) -o $@ $(fasta2partsOBJS)
+	$(CXX) $(LDFLAGS) -o $@ $(fasta2partsOBJS)
 
 gff_check.o:	common.hpp common.inc gff.hpp
 gff_checkOBJS=gff_check.o common.o gff.o
 gff_check:	$(gff_checkOBJS)
-	$(CXX) -o $@ $(gff_checkOBJS)
+	$(CXX) $(LDFLAGS) -o $@ $(gff_checkOBJS)
 
 dna_mutation.o:	common.hpp common.inc alignment.hpp
 dna_mutationOBJS=dna_mutation.o common.o alignment.o
 dna_mutation:	$(dna_mutationOBJS)
-	$(CXX) -o $@ $(dna_mutationOBJS)
+	$(CXX) $(LDFLAGS) -o $@ $(dna_mutationOBJS)
 
 
 
@@ -154,9 +154,9 @@
 install:
 	@if [ ! -e $(bindir) ]; \
 	then \
-		mkdir -p $(bindir); \
+		mkdir -p $(DESTDIR)$(bindir); \
 	fi
-	$(INSTALL) $(BINARIES) $(bindir)
+	$(INSTALL) $(BINARIES) $(DESTDIR)$(bindir)
 
 # amrfinder binaries for github binary release
 GITHUB_FILE=amrfinder_binaries_v$(VERSION_STRING)
